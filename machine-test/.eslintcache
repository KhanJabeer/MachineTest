[{"D:\\Task\\cchhhhh\\MachineTest\\machine-test\\src\\index.js":"1","D:\\Task\\cchhhhh\\MachineTest\\machine-test\\src\\App.js":"2","D:\\Task\\cchhhhh\\MachineTest\\machine-test\\src\\reportWebVitals.js":"3","D:\\Task\\cchhhhh\\MachineTest\\machine-test\\src\\utils\\Users.js":"4","D:\\Task\\cchhhhh\\MachineTest\\machine-test\\src\\routes\\PrivateRoute.js":"5","D:\\Task\\cchhhhh\\MachineTest\\machine-test\\src\\Components\\Dashboard\\Dashboard.jsx":"6","D:\\Task\\cchhhhh\\MachineTest\\machine-test\\src\\Components\\Login\\Login.jsx":"7","D:\\Task\\cchhhhh\\MachineTest\\machine-test\\src\\Components\\UserManage\\UserManage.jsx":"8","D:\\Task\\cchhhhh\\MachineTest\\machine-test\\src\\Components\\TodoList\\TodoList.jsx":"9","D:\\Task\\cchhhhh\\MachineTest\\machine-test\\src\\formComponent\\validation.js":"10","D:\\Task\\cchhhhh\\MachineTest\\machine-test\\src\\formComponent\\Input.js":"11","D:\\Task\\cchhhhh\\MachineTest\\machine-test\\src\\Components\\Logout.jsx":"12","D:\\Task\\cchhhhh\\MachineTest\\machine-test\\src\\Components\\Pagination\\Pagination.jsx":"13","D:\\Task\\cchhhhh\\MachineTest\\machine-test\\src\\Components\\UsermanageModal\\UserdeleteModal.jsx":"14","D:\\Task\\cchhhhh\\MachineTest\\machine-test\\src\\Components\\UsermanageModal\\UsermanageModal.jsx":"15"},{"size":517,"mtime":1607083637065,"results":"16","hashOfConfig":"17"},{"size":2385,"mtime":1607173191135,"results":"18","hashOfConfig":"17"},{"size":375,"mtime":1607083637105,"results":"19","hashOfConfig":"17"},{"size":944,"mtime":1607083944375,"results":"20","hashOfConfig":"17"},{"size":808,"mtime":1607088835385,"results":"21","hashOfConfig":"17"},{"size":5093,"mtime":1607187322055,"results":"22","hashOfConfig":"17"},{"size":1929,"mtime":1607083944373,"results":"23","hashOfConfig":"17"},{"size":5866,"mtime":1607189473557,"results":"24","hashOfConfig":"17"},{"size":3937,"mtime":1607189231506,"results":"25","hashOfConfig":"17"},{"size":3676,"mtime":1607170975629,"results":"26","hashOfConfig":"17"},{"size":718,"mtime":1607171059507,"results":"27","hashOfConfig":"17"},{"size":1622,"mtime":1607188037307,"results":"28","hashOfConfig":"17"},{"size":2328,"mtime":1607171359955,"results":"29","hashOfConfig":"17"},{"size":930,"mtime":1607083944374,"results":"30","hashOfConfig":"17"},{"size":7781,"mtime":1607185215659,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"88duhr",{"filePath":"35","messages":"36","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":39,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"34"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"34"},"D:\\Task\\cchhhhh\\MachineTest\\machine-test\\src\\index.js",[],["74","75"],"D:\\Task\\cchhhhh\\MachineTest\\machine-test\\src\\App.js",["76","77","78","79"],"import React,{useEffect, useState} from \"react\";\r\nimport {BrowserRouter as Router,Route,Link} from \"react-router-dom\";\r\nimport Login from './Components/Login/Login'\r\nimport Dashboard from './Components/Dashboard/Dashboard'\r\nimport UserManage from './Components/UserManage/UserManage'\r\nimport TodoList from './Components/TodoList/TodoList'\r\nimport \"./index.css\";\r\nimport \"./App.css\";\r\nimport Users from \"./utils/Users\";\r\nimport PrivateRoute from \"./routes/PrivateRoute\";\r\n\r\nconst App = () => {\r\n\r\n  const [isAuthenticated,setAuthenticated] = useState(null)\r\n  const [users,setUsers] = useState([])\r\n  const [loggedInUser,setLoggedInUser] = useState(null)\r\n  const [activeBox,setActiveBox] = useState([])\r\n  const [currentLocation,setCurrentLocation] = useState(null)\r\n\r\n  useEffect(() => {\r\n\r\n     if(!localStorage.loggedInUser) {\r\n       localStorage.setItem(\"loggedInUser\",\"\")\r\n     }\r\n     \r\n      if(!localStorage.users) {\r\n        localStorage.setItem(\"users\",JSON.stringify(Users))\r\n\r\n        const userDetails = JSON.parse(localStorage.getItem(\"users\"))\r\n        setUsers(userDetails)\r\n      }else {\r\n        const userDetails = JSON.parse(localStorage.getItem(\"users\"))\r\n        setUsers(userDetails)\r\n      }\r\n\r\n      console.log(\"sadfjashldfjsdf\",localStorage.loggedInUser === \"\")\r\n\r\n      if(localStorage.loggedInUser === \"\") {\r\n         setAuthenticated(false)\r\n      }else {\r\n        setAuthenticated(true)\r\n        const loggedUser = JSON.parse(localStorage.getItem(\"loggedInUser\"))\r\n        setLoggedInUser(loggedUser)\r\n      }\r\n      \r\n      setCurrentLocation(window.location.href)\r\n      \r\n  },[])\r\n\r\n  const changeAuth = () => {\r\n    setAuthenticated(true)\r\n    const loggedUser = JSON.parse(localStorage.getItem(\"loggedInUser\"))\r\n    setLoggedInUser(loggedUser)\r\n  }\r\n\r\n \r\n  return(\r\n    <div className=\"App\">\r\n        \r\n    <Router> \r\n\r\n      \r\n           <Route exact  path=\"/\" render={(props) => <Login {...props} changeAuth={changeAuth} users={users} /> }/> \r\n           <PrivateRoute path=\"/todolist\"  component={TodoList} isAuthenticated={isAuthenticated} />\r\n           <PrivateRoute path=\"/usermanage\"  component={UserManage} isAuthenticated={isAuthenticated} />\r\n           <PrivateRoute path=\"/dashboard\" component={Dashboard} isAuthenticated={isAuthenticated} loggedInUser={loggedInUser}/>\r\n\r\n    </Router> \r\n     </div>\r\n  )\r\n  }\r\n\r\n\r\nexport default App;","D:\\Task\\cchhhhh\\MachineTest\\machine-test\\src\\reportWebVitals.js",[],"D:\\Task\\cchhhhh\\MachineTest\\machine-test\\src\\utils\\Users.js",[],"D:\\Task\\cchhhhh\\MachineTest\\machine-test\\src\\routes\\PrivateRoute.js",["80"],"import React,{useState,useEffect} from \"react\";\r\nimport {Route,Redirect,withRouter} from \"react-router-dom\";\r\n\r\n\r\nconst PrivateRoute = ({ component:Component,isAuthenticated,loggedInUser,history,...rest }) => {\r\n\r\n  console.log(\"sdfjksdhfjsf\",loggedInUser)\r\n    useEffect(() => {\r\n    loggedInUser && (window.location.pathname === \"/usermanage\" && \"/post\")  && loggedInUser.role === \"user\" && history.push(\"/dashboard\" && \"/post\")\r\n    },[loggedInUser,history])\r\n\r\nreturn(\r\n    <Route \r\n    {...rest} \r\n    render={ (props) => !isAuthenticated && isAuthenticated !== null ? \r\n    (<Redirect to=\"/\" />) \r\n     : \r\n    (\r\n      \r\n      <Component {...props} loggedInUser={loggedInUser} />\r\n    ) \r\n\r\n     }\r\n     />\r\n)\r\n   \r\n\r\n    }\r\n           \r\n               \r\n\r\n\r\nexport default withRouter(PrivateRoute);\r\n","D:\\Task\\cchhhhh\\MachineTest\\machine-test\\src\\Components\\Dashboard\\Dashboard.jsx",["81","82","83","84","85","86","87","88","89","90","91","92"],"import React,{useEffect,useState} from \"react\";\r\nimport './Dashboard.css'\r\nimport {BrowserRouter as Router,Route,Switch,Link,Redirect} from \"react-router-dom\";\r\nimport Pagination,{PaginationHelper} from '../Pagination/Pagination';\r\nimport Logout from '../Logout'\r\nimport Input from \"../../formComponent/Input\";\r\nimport ValidationLibrary from \"../../formComponent/validation\";\r\n\r\nconst Dashboard = ({ loggedInUser,history }) => {\r\n\r\n\r\n  const [userDetails,setUserDetails] = useState([])\r\n\r\n  const [currId,setCurrId] = useState(null)\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [postsPerPage] = useState(5);\r\n  const [paginationIndex,updatePaginationIndex] =useState(0);\r\n  const [entersearch,setSearch] =useState(null);\r\n  \r\n\r\n  useEffect(() => {\r\n    loadUserDetails()\r\n},[])\r\n\r\n\r\nconst loadUserDetails = () => {\r\n  if(localStorage.users) {\r\n    const user = JSON.parse(localStorage.getItem(\"users\"))\r\n    setUserDetails(user)\r\n  }\r\n\r\n  if(localStorage.loggedInUser) {\r\n    const user = JSON.parse(localStorage.getItem(\"loggedInUser\"))\r\n  \r\n    setCurrId(user.userId)\r\n  }\r\n}\r\n\r\nconst searchUser = (e) => {\r\n  setSearch(e.target.value)\r\n  console.log(entersearch,\"entersearch\")\r\n \r\n}\r\n\r\nconst searching = userDetails && userDetails.filter((data) => {\r\n  console.log(data, \"Search_data\")\r\n  if (entersearch === null)\r\n    return data\r\n  else if (data.name !== null && data.name.toLowerCase().includes(entersearch.toLowerCase())\r\n    || (data.status != null && data.status.toLowerCase().includes(entersearch.toString()))\r\n    || (data.country != null && data.country.toLowerCase().includes(entersearch.toString()))\r\n   \r\n  ) {\r\n    return data\r\n  }\r\n\r\n})\r\n\r\nconst logout = () => {\r\n  localStorage.setItem(\"loggedInUser\",\"\")\r\n  history.push(\"/\")\r\n}\r\n\r\n  // Get current posts\r\n  const indexOfLastPost = currentPage * postsPerPage;\r\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n  const currentPosts = userDetails && userDetails.filter((user)=>user.role === \"user\" && user.userId !== currId).slice\r\n  (indexOfFirstPost, indexOfLastPost);\r\n\r\n  // Change page\r\n  const setpaginate = (pageNumber,click_data) => {\r\n\r\n    var gethelperData=PaginationHelper.checkingPaginationProcess(pageNumber,click_data,null,userDetails,postsPerPage,currentPage);\r\n    if(gethelperData.pageNumber){\r\n      setCurrentPage(gethelperData.pageNumber);\r\n    }\r\n    if(gethelperData.totalmovedpage>=0){\r\n      updatePaginationIndex(gethelperData.totalmovedpage);\r\n    }\r\n\r\n  }\r\n\r\n  const updatePaginationData=(data,totalnumbers)=>{\r\n\r\n    updatePaginationIndex(data);\r\n    var gethelperData=PaginationHelper.checkingPaginationProcess((data*5)+1,null,totalnumbers,userDetails,postsPerPage,currentPage);\r\n    if(gethelperData.pageNumber){\r\n      setCurrentPage(gethelperData.pageNumber);\r\n    }\r\n\r\n  }\r\n\r\n \r\n\r\nconsole.log(history,\"historyDash\")\r\n  return(\r\n    <div>      \r\n       {/* <header className=\"dash_heads\"> */}\r\n           {/* <div className=\"dash_title\">\r\n           <div>\r\n           <Link to=\"/dashboard\" className=\"link_header\">Dashboard</Link>\r\n           </div>\r\n           \r\n          {loggedInUser && loggedInUser.role !== \"user\" && <div>\r\n              <Link to=\"/usermanage\" className=\"link_header\">User Management</Link>\r\n           </div>}\r\n           <div>\r\n           <Link to=\"/todolist\" className=\"link_header\">Todo List</Link>\r\n           </div>\r\n           </div> */}\r\n           <div>\r\n           {/* <div className=\"logout_btn\" >\r\n             <div className=\"logged_user\">{loggedInUser && loggedInUser.name}</div>\r\n              <button onClick={logout}>Log out</button>\r\n           </div> */}\r\n           <Logout history={history} loggedInUser={loggedInUser}/>\r\n           </div>\r\n        {/* </header> */}\r\n\r\n     \r\n           <div className=\"dash_content\">\r\n\r\n          <div className=\"search_wrap\">\r\n            <div className=\"search_label\">Search User</div>\r\n          <input className=\"search_field\" \r\n          type=\"search\"  value={entersearch}  onChange={(e)=>searchUser(e)}/>\r\n          </div>\r\n\r\n           <div className=\"userstatus_header\">\r\n             <div>User List</div>\r\n             <div>Country</div>\r\n             <div>Status</div>\r\n             </div>\r\n            {currentPosts && currentPosts.length > 0 && currentPosts.map((user) => {\r\n              return(\r\n                 <div className=\"users\"><div className=\"user_names\">{user.name}</div>\r\n                  <div className=\"status\">{user.country}</div>\r\n                 <div className=\"status\">{user.status}</div></div>\r\n              )\r\n            })}\r\n           </div>\r\n\r\n           <Pagination\r\n            postsPerPage={postsPerPage}\r\n            totalPosts={userDetails && userDetails.length}\r\n            paginationIndex={paginationIndex}\r\n            udpatePageNumber={(i)=>setCurrentPage(i)}\r\n            paginate={(data)=>setpaginate(data,'click')}\r\n            updatePaginationIndex={(data,totalnumbers)=>updatePaginationData(data,totalnumbers)}\r\n            pageNo={currentPage && currentPage}\r\n            />\r\n\r\n    </div>\r\n  )\r\n  }\r\n\r\n\r\nexport default Dashboard;","D:\\Task\\cchhhhh\\MachineTest\\machine-test\\src\\Components\\Login\\Login.jsx",["93","94","95","96"],"import React,{useEffect,useState} from \"react\";\r\nimport './Login.css'\r\nimport {BrowserRouter as Router,Route,Switch} from \"react-router-dom\";\r\n\r\n\r\n\r\nconst Login = ({ users,changeAuth,history }) => {\r\n\r\nconst handleSubmit =(e)=>{\r\n    e.preventDefault()\r\n  \r\n    const validUser = users && users.findIndex(user => user.email === loginData.email && user.password === loginData.password)\r\n    console.log(\"validUserCheck\",validUser)\r\n    if(validUser !== -1) {\r\n      localStorage.setItem(\"loggedInUser\",JSON.stringify(users[validUser]))\r\n      changeAuth()\r\n      history.push(\"/dashboard\")\r\n    }else {\r\n      alert(\"Invalid email or password\")\r\n    }\r\n}   \r\n\r\nconst [loginData,setLoginData] = useState({email:\"\",password:\"\"})\r\n\r\nconst {email,password} = loginData;\r\n\r\nconst handleChange = (e) => {\r\n  setLoginData({...loginData,[e.target.name]:e.target.value})\r\n}\r\n\r\n  return(\r\n    <div className=\"login_content\">\r\n        <header>\r\n      <h1>Machine Test</h1>\r\n          <h1>Login</h1>\r\n        </header>\r\n\r\n        <form  onSubmit={handleSubmit}>\r\n            <div className=\"login_fields\">\r\n                <input \r\n                className=\"input_boxes\"\r\n                type=\"email\" \r\n                name=\"email\" \r\n                value={email}\r\n                placeholder=\"Email\" \r\n                onChange={(e) => handleChange(e)}\r\n                required />\r\n            </div>\r\n\r\n            <div className=\"login_fields\">\r\n                <input \r\n                className=\"input_boxes\"\r\n                type=\"password\" \r\n                name=\"password\"\r\n                value={password}\r\n                placeholder=\"Password\"\r\n                onChange={(e) => handleChange(e)}\r\n                required/>\r\n            </div>\r\n\r\n            <div className=\"login_btn\">\r\n            <button onClick={handleSubmit}>Login</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n  )\r\n  }\r\n\r\n\r\nexport default Login;","D:\\Task\\cchhhhh\\MachineTest\\machine-test\\src\\Components\\UserManage\\UserManage.jsx",["97","98","99","100","101","102","103","104"],"import React,{useEffect,useState} from \"react\";\r\nimport './UserManage.css'\r\nimport {BrowserRouter as Router,Route,Switch,Link} from \"react-router-dom\";\r\nimport { MdModeEdit, MdDelete } from \"react-icons/md\";\r\nimport Users from \"../../utils/Users\";\r\nimport UserManageModal from \"../UsermanageModal/UsermanageModal\";\r\nimport UserdeleteManage from \"../UsermanageModal/UserdeleteModal\";\r\nimport Pagination,{PaginationHelper} from '../Pagination/Pagination';\r\nimport Logout from '../Logout'\r\n\r\n\r\n\r\nconst UserManage = ({history}) => {\r\n\r\n \r\n  const [insertopen,setinsertopen] = useState(false)\r\n  const [editopen,seteditopen] = useState(false)\r\n\r\n  const [opendelete,setopendelete] = useState(false)\r\n  const [userDetails,setUserDetails] = useState([]);\r\n  const [loggedInUser,setLoggedInUser] = useState(null)\r\n\r\n  const [userId,setUserId] = useState(null)\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const [currId,setCurrId] = useState(null)\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [postsPerPage] = useState(5);\r\n  const [paginationIndex,updatePaginationIndex] =useState(0);\r\n\r\n  useEffect(() => {\r\n      loadUserDetails()\r\n  },[])\r\n\r\n\r\n  const loadUserDetails = () => {\r\n   \r\n    if(localStorage.users) {\r\n      const user = JSON.parse(localStorage.getItem(\"users\"))\r\n      setUserDetails(user)\r\n    }\r\n\r\n    if(localStorage.loggedInUser) {\r\n      const user = JSON.parse(localStorage.getItem(\"loggedInUser\"))\r\n      setLoggedInUser(user)\r\n      setCurrId(user.userId)\r\n    }\r\n  }\r\n\r\n  const addModal = ()=> {\r\n    setOpen(true);\r\n    setinsertopen(true)\r\n    seteditopen(false)\r\n\r\n  }\r\n\r\n  const editModal = (userId)=> {\r\n    setUserId(userId)\r\n    setOpen(true)\r\n    seteditopen(true)\r\n    setinsertopen(false)\r\n  }\r\n\r\n  const deleteOpen = (userId)=>{\r\n    setUserId(userId)\r\n    setopendelete(true)\r\n  }\r\n\r\n\r\n  const handleClose =()=>{\r\n    setOpen(false);\r\n    setinsertopen(false)\r\n    seteditopen(false)\r\n    setopendelete(false)\r\n}\r\n\r\n  // Get current posts\r\n  const indexOfLastPost = currentPage * postsPerPage;\r\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n  const currentPosts = userDetails && userDetails.filter((user)=>user.role === \"user\" && user.userId !== currId).slice\r\n  (indexOfFirstPost, indexOfLastPost);\r\n\r\n  // Change page\r\n  // const managePage = managePage => setCurrentPage(managePage);\r\n\r\n  const setpaginate = (pageNumber,click_data) => {\r\n\r\n    var gethelperData=PaginationHelper.checkingPaginationProcess(pageNumber,click_data,null,userDetails,postsPerPage,currentPage);\r\n    if(gethelperData.pageNumber){\r\n      setCurrentPage(gethelperData.pageNumber);\r\n    }\r\n    if(gethelperData.totalmovedpage>=0){\r\n      updatePaginationIndex(gethelperData.totalmovedpage);\r\n    }\r\n\r\n  }\r\n\r\n  const updatePaginationData=(data,totalnumbers)=>{\r\n\r\n    updatePaginationIndex(data);\r\n    var gethelperData=PaginationHelper.checkingPaginationProcess((data*5)+1,null,totalnumbers,userDetails,postsPerPage,currentPage);\r\n    if(gethelperData.pageNumber){\r\n      setCurrentPage(gethelperData.pageNumber);\r\n    }\r\n\r\n  }\r\n\r\n  \r\n  return(\r\n    <div>\r\n       {/* <header className=\"usermanage_heads\"> */}\r\n         {/* <div className=\"usermanage_title\">\r\n        \r\n         <Link to=\"/dashboard\" className=\"link_header\">DashBoard</Link>\r\n         {loggedInUser&& loggedInUser.role !== \"user\" && <Link to=\"/usermanage\" className=\"link_header\">User Management</Link>}\r\n         <Link to=\"/todolist\" className=\"link_header\">Todo List</Link>\r\n        </div> */}\r\n        <Logout history={history} loggedInUser={loggedInUser}/>\r\n\r\n\r\n      \r\n        {/* </header> */}\r\n        <div>\r\n        \r\n         </div>\r\n        <div className=\"usermanage_content\">\r\n        {loggedInUser && (loggedInUser.role === \"root\" ||  \"admin\") &&<div className=\"useradd_btn\">\r\n           <button onClick={addModal}>Add User</button>\r\n         </div>}\r\n        <div className=\"usermanage_header\">User List<span>Action</span></div>\r\n            {currentPosts && currentPosts.length > 0 && currentPosts.map((user) => {\r\n              return(\r\n              \r\n                <div className=\"users\">\r\n                <div className=\"usermanage_names\">{user.name}</div>\r\n                <div className=\"action_icons\">\r\n                {(loggedInUser.role === \"root\" ||  \"admin\") && <MdModeEdit  className=\"edit_icon\" onClick={() => editModal(user.userId)}/>}\r\n                  {loggedInUser.role === \"root\" && <MdDelete className=\"delete_icon\" onClick={() => deleteOpen(user.userId)}/>}\r\n                </div>\r\n                </div>\r\n              )\r\n            })}\r\n             \r\n         \r\n        </div>\r\n\r\n        {\r\n        open && \r\n         <div \r\n         open={open}\r\n         onClose={handleClose}\r\n         title={insertopen ? \"Add User\" : \"Edit User\"}\r\n         className={open == true ? \"modal_open\" : \"modal_close\" }\r\n         >\r\n           \r\n        <UserManageModal  add={insertopen} onClose={handleClose} users={userDetails} userId={userId} />\r\n\r\n        </div>\r\n        }\r\n\r\n      {\r\n        opendelete && \r\n         <div \r\n         open={deleteOpen}\r\n         onClose={handleClose}\r\n         className={opendelete == true ? \"modal_open\" : \"modal_close\" }         >\r\n\r\n        <UserdeleteManage onClose={handleClose} users={userDetails}  userId={userId} loadUserDetails={loadUserDetails} />\r\n\r\n        </div>\r\n        }\r\n\r\n            <Pagination\r\n            postsPerPage={postsPerPage}\r\n            totalPosts={userDetails && userDetails.length}\r\n            paginationIndex={paginationIndex}\r\n            udpatePageNumber={(i)=>setCurrentPage(i)}\r\n            paginate={(data)=>setpaginate(data,'click')}\r\n            updatePaginationIndex={(data,totalnumbers)=>updatePaginationData(data,totalnumbers)}\r\n            pageNo={currentPage && currentPage}\r\n            />\r\n\r\n    </div>\r\n  )\r\n  }\r\n\r\n\r\nexport default UserManage;","D:\\Task\\cchhhhh\\MachineTest\\machine-test\\src\\Components\\TodoList\\TodoList.jsx",["105","106","107","108","109","110","111"],"import React, { useState, useEffect } from 'react';\r\nimport  './TodoList.css';\r\nimport Pagination,{PaginationHelper} from '../Pagination/Pagination';\r\nimport {BrowserRouter as Router,Route,Switch,Link} from \"react-router-dom\";\r\nimport Logout from '../Logout'\r\n\r\n\r\nconst TodoList = ({history}) => {\r\n  const [posts, setPosts] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [postsPerPage] = useState(5);\r\n  const [hasError, setErrors] = useState(false);\r\n  const [paginationIndex,updatePaginationIndex] =useState(0);\r\n  const [userDetails,setUserDetails] = useState([]);\r\n  const [loggedInUser,setLoggedInUser] = useState(null)\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    const fetchPosts = async () => {\r\n      setLoading(true);\r\n      const res = await fetch('https://jsonplaceholder.typicode.com/todos')\r\n      res.json()\r\n      .then(res => setPosts(res),console.log(res,\"scfksdnkfjskdf\"))\r\n      \r\n      .catch(err => setErrors(err)); \r\n      setLoading(false);\r\n    \r\n    };\r\n\r\n    fetchPosts();\r\n    loadUserDetails();\r\n  }, []);\r\n\r\n \r\n\r\n  // Get current posts\r\n  const indexOfLastPost = currentPage * postsPerPage;\r\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n  const currentPosts = posts && posts.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n  // Change page\r\n  const setpaginate = (pageNumber,click_data) => {\r\n\r\n    var gethelperData=PaginationHelper.checkingPaginationProcess(pageNumber,click_data,null,posts,postsPerPage,currentPage);\r\n    if(gethelperData.pageNumber){\r\n      setCurrentPage(gethelperData.pageNumber);\r\n    }\r\n    if(gethelperData.totalmovedpage>=0){\r\n      updatePaginationIndex(gethelperData.totalmovedpage);\r\n    }\r\n\r\n  }\r\n\r\n  const loadUserDetails = () => {\r\n   \r\n    if(localStorage.users) {\r\n      const user = JSON.parse(localStorage.getItem(\"users\"))\r\n      setUserDetails(user)\r\n    }\r\n\r\n    if(localStorage.loggedInUser) {\r\n      const user = JSON.parse(localStorage.getItem(\"loggedInUser\"))\r\n      setLoggedInUser(user)\r\n     \r\n    }\r\n  }\r\n  const updatePaginationData=(data,totalnumbers)=>{\r\n    updatePaginationIndex(data);\r\n    var gethelperData=PaginationHelper.checkingPaginationProcess((data*5)+1,null,totalnumbers,posts,postsPerPage,currentPage);\r\n    if(gethelperData.pageNumber){\r\n      setCurrentPage(gethelperData.pageNumber);\r\n    }\r\n  }\r\n\r\n  console.log(\"dskjfbsjdbf\",currentPosts)\r\n  return (\r\n    <div className='container mt-5'>\r\n      \r\n        {/* <div className=\"post_title\">\r\n        <Link to=\"/dashboard\" className=\"link_header\">DashBoard</Link>  \r\n        {loggedInUser && loggedInUser.role !== \"user\" &&<Link to=\"/usermanage\" className=\"link_header\">User Management</Link>}\r\n        <Link to=\"/todolist\" className=\"link_header\">Todo List</Link>\r\n        \r\n       \r\n\r\n        </div> */}\r\n        <Logout history={history} loggedInUser={loggedInUser}/>\r\n        <div className=\"todolist_content\">\r\n        <table className=\"table_style\">\r\n   \r\n            <tr>\r\n                <th>To Do Task</th>\r\n                <th>Status</th>\r\n                \r\n            </tr>\r\n         \r\n            {currentPosts && currentPosts.map(currentPosts => (\r\n            \r\n           <tr>\r\n            \r\n                <td>{currentPosts.title}</td>\r\n                <td>{currentPosts.completed === true ? \"Completed\" : \"Pending\" }</td>\r\n               \r\n            \r\n            </tr>\r\n            ))} \r\n        \r\n    </table>\r\n\r\n    </div>\r\n    \r\n   \r\n   \r\n      <Pagination\r\n        postsPerPage={postsPerPage}\r\n        totalPosts={posts && posts.length}\r\n        paginate={(data)=>setpaginate(data,'click')}\r\n        paginationIndex={paginationIndex}\r\n        updatePaginationIndex={(data,totalnumbers)=>updatePaginationData(data,totalnumbers)}\r\n        udpatePageNumber={(i)=>setCurrentPage(i)}\r\n        pageNo={currentPage && currentPage}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoList;","D:\\Task\\cchhhhh\\MachineTest\\machine-test\\src\\formComponent\\validation.js",["112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150"],"import React, { Component } from 'react';\r\n\r\nclass ValidationLibrary extends Component {\r\n  checkValidation(textValue, validatorsArray) {\r\n    console.log(\"mystextvalue\",textValue);\r\n    for (var valid in validatorsArray) {//check validations through array\r\n      if (textValue == \"\") {//check value is empty\r\n        if (validatorsArray[valid].name == 'required') {\r\n          return { msg: \"Field required\", state: false };//validation occurs break the loop & throw the error\r\n        }\r\n      } else if (validatorsArray[valid].name == 'email') {\r\n        var re = /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\r\n        if (re.test(textValue) == false) {\r\n\r\n          return { msg: \"Email is invalid\", state: false };//validation occurs break the loop & throw the error\r\n        }\r\n      } else if (validatorsArray[valid].name == 'minLength') {\r\n        if (textValue.length > parseInt(validatorsArray[valid].params)) {\r\n          return { msg: \"Length should not exceed \" + validatorsArray[valid].params + \" characters\", state: false };//validation occurs break the loop & throw the error\r\n        }\r\n      } else if (validatorsArray[valid].name == 'custommaxLength') {\r\n        if (textValue.length > parseInt(validatorsArray[valid].params)) {\r\n          return { msg: \"Length should not exceed \" + validatorsArray[valid].params + \" characters\", state: false };//validation occurs break the loop & throw the error\r\n        }\r\n      } else if (validatorsArray[valid].name == 'mobile') {\r\n        //var re = /^(0|[1-9][0-9]{9,15})$/;\r\n        var re = /^([0-9][0-9]{9,14})$/;\r\n        if (re.test(textValue) == false) {\r\n          return { msg: \"Please Enter 10 to 15 digit Mobile Number\", state: false };\r\n        }\r\n      }\r\n      else if (validatorsArray[valid].name == 'mobile_india') {\r\n        //var re = /^(0|[1-9][0-9]{9,15})$/;\r\n        var re = /^([0-9][0-9]{9})$/;\r\n        if (re.test(textValue) == false) {\r\n          return { msg: \"Please Enter 10 digit Mobile Number\", state: false };\r\n        }\r\n      }\r\n\r\n      else if (validatorsArray[valid].name == 'leave') {\r\n        var re = /^(0|[1-9][0-9]{0,1})$/;\r\n        // var re = /(^\\d{2}$)|(^\\d{2}-\\d{2}$)/;\r\n        if (re.test(textValue) == false) {\r\n          return { msg: \"2 digits only allowed\", state: false };\r\n        }\r\n      }\r\n      else if (validatorsArray[valid].name == 'mark') {\r\n        //var re = /^(0|[1-9][0-9]{9,15})$/;\r\n        var re = /^([0-9][0-9]{0,2})$/;\r\n        if (re.test(textValue) == false) {\r\n          return { msg: \"Please Enter 3 digits Only\", state: false };\r\n        }\r\n      }\r\n       else if (validatorsArray[valid].name == 'regex') {\r\n        // var re = /^(0|[1-9][0-9]*){10}$/;\r\n        if (new RegExp(validatorsArray[valid].params).test(textValue) == false) {\r\n          return { msg: validatorsArray[valid].msg, state: false };\r\n        }\r\n      }\r\n      else if (validatorsArray[valid].name == 'webUrl') {\r\n        var re = /^((ftp|http|https):\\/\\/)?(www.)?(?!.*(ftp|http|https|www.))[a-zA-Z0-9_-]+(\\.[a-zA-Z]+)+((\\/)[\\w#]+)*(\\/\\w+\\?[a-zA-Z0-9_]+=\\w+(&[a-zA-Z0-9_]+=\\w+)*)?$/;\r\n        if (re.test(textValue) == false) {\r\n          return { msg: \"Url is invalid\", state: false };\r\n        }\r\n      }\r\n      else if (validatorsArray[valid].name == 'address') {\r\n        // var re =/^.{1,500}$/;\r\n        var re = /^[a-zA-Z0-9\\s,'-.]*$/;\r\n        if (re.test(textValue) == false) {\r\n          return { msg: \"Invalid Address\", state: false };\r\n        }\r\n      }\r\n    }\r\n    return { msg: \"\", state: true };//if no error throw empty message\r\n  }\r\n}\r\nexport default new ValidationLibrary();","D:\\Task\\cchhhhh\\MachineTest\\machine-test\\src\\formComponent\\Input.js",[],"D:\\Task\\cchhhhh\\MachineTest\\machine-test\\src\\Components\\Logout.jsx",["151","152","153","154"],"import React,{useEffect,useState} from \"react\";\r\nimport {BrowserRouter as Router,Route,Switch,Link,Redirect} from \"react-router-dom\";\r\nimport './Logout.css'\r\n\r\nconst Logout = ({ loggedInUser,history }) => {\r\n\r\n    const [currentLocation,setCurrentLocation] = useState(null)\r\n\r\n\r\n    useEffect(() => {\r\n       \r\n        setCurrentLocation(window.location.href)\r\n    },[])\r\n\r\nconst logout = () => {\r\n    localStorage.setItem(\"loggedInUser\",\"\")\r\n    history.push(\"/\")\r\n  \r\n}\r\n\r\nreturn (\r\n<div className=\"logout\" >\r\n\r\n<div className=\"dash_title\">\r\n           <div className=\"header_links\">\r\n           <Link to=\"/dashboard\" \r\n           className={`${currentLocation !== null && currentLocation.includes(\"/dashboard\") ? \"active_text_heading\" :\"link_header\"}`}>\r\n           Dashboard</Link>\r\n           </div>\r\n           \r\n          {loggedInUser && loggedInUser.role !== \"user\" && \r\n           <div className=\"header_links\">\r\n           <Link to=\"/usermanage\" \r\n             className={`${currentLocation !== null && currentLocation.includes(\"/usermanage\") ? \"active_text_heading\" : \"link_header\" }`}>\r\n             User Management </Link>\r\n           </div>}\r\n           <div className=\"header_links\">\r\n           <Link to=\"/todolist\" \r\n           className={`${currentLocation !== null && currentLocation.includes(\"/todolist\") ? \"active_text_heading\" :\"link_header\"}`}>\r\n               Todo List</Link>\r\n           </div>\r\n           </div>\r\n\r\n<div className=\"logged_user\">{loggedInUser && loggedInUser.name}\r\n <button className=\"logout_btn\" onClick={logout}>Log out</button>\r\n </div>\r\n</div>\r\n)\r\n}\r\n\r\nexport default Logout","D:\\Task\\cchhhhh\\MachineTest\\machine-test\\src\\Components\\Pagination\\Pagination.jsx",["155","156","157","158","159","160","161","162"],"import React from 'react';\r\nimport './Pagination.css';\r\n\r\n\r\nexport const PaginationHelper={\r\n\r\n  checkingPaginationProcess : (pageNumber,click_data,totalnumbers,posts,postsPerPage,currentPage) => {\r\n\r\n    var totalmovedpage=Math.ceil(pageNumber/5)-1;//to find where the pagenumber falls in which row\r\n    var totalpagerow=Math.ceil(Math.ceil(posts.length/postsPerPage)/5);//to find how much rows we have\r\n    var checkcurrentnumber=(totalmovedpage*5)+1;\r\n    var checkcurrentnumbermax=(totalmovedpage+1)*5;\r\n    var checkcomingundermax=(currentPage>=checkcurrentnumber&&currentPage<=checkcurrentnumbermax);\r\n    \r\n    if(click_data){\r\n      return {'pageNumber':pageNumber,'totalmovedpage':totalmovedpage,'click':true}\r\n    }\r\n    if((totalmovedpage==0&&checkcomingundermax)||(totalmovedpage==(totalpagerow-1)&&checkcomingundermax)){\r\n      return {};\r\n    }\r\n   return {'pageNumber':pageNumber}\r\n  }\r\n}\r\n\r\nconst Pagination = ({ postsPerPage, totalPosts, paginate,pageNo,udpatePageNumber,paginationIndex,updatePaginationIndex }) => {\r\n  \r\n  const pageNumbers = [];\r\n  \r\n  for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n  \r\nconst totalpaginationdivideLength=Math.ceil(pageNumbers.length/5);\r\n\r\nreturn (\r\n  \r\n      <div className='pagination'>\r\n  \r\n\r\n      <a onClick={()=>updatePaginationIndex&&updatePaginationIndex(paginationIndex>1?paginationIndex-1:0,pageNumbers.length)} className=\"page_icon\">&laquo;</a>\r\n\r\n       <a onClick={()=>udpatePageNumber&&paginate(pageNo>0?pageNo-1:1)} className=\"page_text\">Previous</a>\r\n\r\n        {JSON.parse(JSON.stringify(pageNumbers)).splice(paginationIndex*5,5).map(number => (\r\n          <div key={number} className={`page_no ${pageNo==number?'active':''}`}>\r\n            <a onClick={() => paginate(number)}  className='pageno_link'>\r\n              {number}\r\n            </a>\r\n          </div>\r\n        ))}\r\n\r\n       <a onClick={()=>udpatePageNumber&&paginate((pageNo<pageNumbers.length)?(pageNo+1):pageNumbers.length)} className=\"page_text\">Next</a>\r\n\r\n       <a onClick={()=>updatePaginationIndex&&updatePaginationIndex(paginationIndex<totalpaginationdivideLength-1?paginationIndex+1:totalpaginationdivideLength-1,pageNumbers.length)} className=\"page_icon\">&raquo;</a>\r\n         \r\n      </div>\r\n  \r\n  );\r\n};\r\n\r\nexport default Pagination;","D:\\Task\\cchhhhh\\MachineTest\\machine-test\\src\\Components\\UsermanageModal\\UserdeleteModal.jsx",[],["163","164"],"D:\\Task\\cchhhhh\\MachineTest\\machine-test\\src\\Components\\UsermanageModal\\UsermanageModal.jsx",["165","166","167","168","169","170"],"import React,{useState,useEffect} from \"react\";\r\nimport './UsermanageModal.css'\r\nimport { uuid } from 'uuidv4';\r\nimport Input from \"../../formComponent/Input\";\r\nimport ValidationLibrary from \"../../formComponent/validation\";\r\n\r\n\r\nconst UserManageModal = ({ add,users,userId,onClose }) => {\r\n\r\n    const [userData,setUserData] = useState({\r\n        \"name\":{\r\n            value:\"\",\r\n            validation: [{ 'name': 'required' }],\r\n            error: null,\r\n            errmsg: null\r\n        },\r\n        \"email\":{\r\n            value:\"\",\r\n            validation: [{ 'name': 'required' }],\r\n            error: null,\r\n            errmsg: null\r\n        },\r\n        \"address\":{\r\n            value:\"\",\r\n            validation: [{ 'name': 'required' }],\r\n            error: null,\r\n            errmsg: null\r\n        },\r\n        \"country\":{\r\n            value:\"\",\r\n            validation: [{ 'name': 'required' }],\r\n            error: null,\r\n            errmsg: null\r\n        },\r\n    })\r\n    \r\n    const [checkStatus,setStatus] = useState({status:\"active\"})\r\n    const [userIndex,setIndex] = useState(null)\r\n\r\n    const {name,email,address,country,role} = userData;\r\n\r\n    const {status} = checkStatus;\r\n\r\n    const handleChange = (e) =>  setStatus({[e.target.name]:e.target.value})\r\n\r\n  \r\n     \r\n\r\n    useEffect(() => {\r\n        if(!add) {\r\n            const findUser = users && users.find(user => user.userId === userId)\r\n            const findIndex = users && users.map(user => user.userId).indexOf(userId)\r\n\r\n            setIndex(findIndex)\r\n\r\n            console.log(\"sdfkjsahdfjasd\",findIndex)\r\n            const {name,email,address,country,status,role} = findUser;\r\n            setUserData({\r\n                \"name\":{\r\n                    value:name,\r\n                    validation: [{ 'name': 'required' }],\r\n                    error: null,\r\n                    errmsg: null\r\n                },\"email\":{\r\n                    value:email,\r\n                    validation: [{ 'name': 'required' }],\r\n                    error: null,\r\n                    errmsg: null\r\n                },\"address\":{\r\n                    value:address,\r\n                    validation: [{ 'name': 'required' }],\r\n                    error: null,\r\n                    errmsg: null\r\n                },\"country\":{\r\n                    value:country,\r\n                    validation: [{ 'name': 'required' }],\r\n                    error: null,\r\n                    errmsg: null\r\n                }\r\n            })\r\n\r\n            setStatus({status})\r\n        }\r\n    },[])\r\n\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        console.log(\"asdfjasdfkjsdf\",userData)\r\n\r\n        var userDataValues = userData;\r\n        var targetkeys = Object.keys(userDataValues);\r\n        console.log(targetkeys,\"sadfahsdfklhsf\");\r\n\r\n        for (var i in targetkeys) {\r\n          var errorcheck = ValidationLibrary.checkValidation(\r\n            userDataValues[targetkeys[i]].value,\r\n            userDataValues[targetkeys[i]].validation\r\n          );\r\n          console.log(errorcheck,\"errcheck\");\r\n          userDataValues[targetkeys[i]].error = !errorcheck.state;\r\n          userDataValues[targetkeys[i]].errmsg = errorcheck.msg;\r\n        }\r\n        var filtererr = targetkeys.filter((obj) => userDataValues[obj].error == true);\r\n        console.log(filtererr,\"sadfkjshadfljadfs\");\r\n        if (filtererr.length > 0) {\r\n        \r\n          setUserData({...userDataValues})\r\n        } \r\n        if (filtererr.length === 0) {\r\n         \r\n             submitUser()\r\n        } \r\n    }\r\n\r\n    const submitUser = () => {\r\n      \r\n        const {name,email,address,country,role} = userData;\r\n        const {status} = checkStatus;\r\n\r\n        console.log(\"sdfskajhdfjasdf\",status)\r\n\r\n        let validUser =  users && users.find(user => user.email === email.value)\r\n\r\n         if(add && validUser) {\r\n             alert(\"User already exists\")\r\n         }\r\n\r\n        //  Add user\r\n         if(add && !validUser) {\r\n              users && users.push({userId:uuid(),name:name.value,email:email.value,address:address.value,country:country.value,status,role:\"user\"})\r\n              localStorage.setItem(\"users\",JSON.stringify(users))\r\n              onClose();\r\n         }\r\n\r\n        //  Edit user\r\n        if(!add) {\r\n         const editUser = users.some((user,index) => { \r\n             return userIndex !== index && user.email === email.value\r\n         })\r\n        \r\n         console.log(\"sdfsdfhsf\",editUser)\r\n        \r\n         if(!editUser) {\r\n         users[userIndex].name = name.value;\r\n         users[userIndex].email = email.value;\r\n         users[userIndex].address = address.value;\r\n         users[userIndex].country = country.value;\r\n         users[userIndex].status = status;\r\n         users[userIndex].role = \"user\";\r\n        \r\n         localStorage.setItem(\"users\",JSON.stringify(users))\r\n         onClose()\r\n     }else{\r\n         alert(\"user already exists\")\r\n     }\r\n}\r\n    }\r\n\r\n\r\n    const resetForm = () => {\r\n       onClose()\r\n    }\r\n\r\n \r\n\r\n   const changeDynamic = (data, key) => {\r\n        console.log(\"Sdafjsahdfjdsf\",data)\r\n        let userDataValues = userData;\r\n        let targetkeys = Object.keys(userDataValues);\r\n\r\n        var errorcheck = ValidationLibrary.checkValidation(data, userDataValues[key].validation);\r\n        userDataValues[key].value = data;\r\n        userDataValues[key].error = !errorcheck.state;\r\n        userDataValues[key].errmsg = errorcheck.msg;\r\n        console.log(\"asfkjashdfjds\",userDataValues)\r\n        setUserData({ ...userData,userDataValues });\r\n        var filtererr = targetkeys.filter((obj) =>\r\n            userDataValues[obj].error === true || userDataValues[obj].error == null);\r\n        if (filtererr.length > 0) {\r\n            \r\n        } else {\r\n           \r\n        }\r\n        \r\n    }\r\n\r\n  return(\r\n    <div className=\"modal\">\r\n     <div className=\"modal_title\">{ add ? \"ADD USER\" : \"EDIT USER\" }</div>\r\n     <div className=\"divider\"/>\r\n     <form onSubmit={(e) => handleSubmit(e)}>\r\n\r\n     <div className=\"grid-container\">\r\n\r\n     <div className=\"grid-item\">\r\n         \r\n         <Input label={\"Name\"} className=\"userdata_fields\" type=\"text\" name=\"name\" value={name.value} changeData={(data) => changeDynamic(data,\"name\")} error={name.error} errmsg={name.errmsg}  />\r\n     </div>\r\n\r\n     <div className=\"grid-item\">\r\n   \r\n         <Input label={\"Email\"} className=\"userdata_fields\" type=\"email\" name=\"email\" value={email.value} changeData={(data) => changeDynamic(data,\"email\")}  error={email.error} errmsg={email.errmsg}   />\r\n     </div>\r\n\r\n     <div className=\"grid-item\">\r\n      \r\n         <Input label={\"Address\"} className=\"userdata_fields\" type=\"text\" name=\"address\" value={address.value} changeData={(data) => changeDynamic(data,\"address\")}  error={address.error} errmsg={address.errmsg}   />\r\n     </div>\r\n\r\n     <div className=\"grid-item\">\r\n         <Input label={\"Country\"} className=\"userdata_fields\" type=\"text\" name=\"country\" value={country.value} changeData={(data) => changeDynamic(data,\"country\")}  error={country.error} errmsg={country.errmsg}   />\r\n     </div>\r\n\r\n     <div className=\"grid-item\">\r\n         <div className=\"field_label\">Status</div>\r\n         <select className=\"status_fields\" name=\"status\" value={status}  onChange={(e) => handleChange(e)} >\r\n            <option value=\"active\">Active</option>\r\n            <option value=\"inactive\">In-Active</option>\r\n        </select>     \r\n        </div>\r\n\r\n\r\n    </div>\r\n\r\n\r\n  \r\n    <div className=\"btn_wraps\">\r\n        <button className=\"cancel_btn\" onClick={() => onClose()}>Cancel</button>    \r\n        <button className=\"addedit_btn\" type=\"submit\" >{add ? \"ADD\" : \"UPDATE\"}</button>\r\n    </div>\r\n    </form>\r\n    </div>\r\n  )\r\n  }\r\n\r\n\r\nexport default UserManageModal;",{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","replacedBy":"174"},{"ruleId":"175","severity":1,"message":"176","line":2,"column":39,"nodeType":"177","messageId":"178","endLine":2,"endColumn":43},{"ruleId":"175","severity":1,"message":"179","line":17,"column":10,"nodeType":"177","messageId":"178","endLine":17,"endColumn":19},{"ruleId":"175","severity":1,"message":"180","line":17,"column":20,"nodeType":"177","messageId":"178","endLine":17,"endColumn":32},{"ruleId":"175","severity":1,"message":"181","line":18,"column":10,"nodeType":"177","messageId":"178","endLine":18,"endColumn":25},{"ruleId":"175","severity":1,"message":"182","line":1,"column":15,"nodeType":"177","messageId":"178","endLine":1,"endColumn":23},{"ruleId":"175","severity":1,"message":"183","line":3,"column":26,"nodeType":"177","messageId":"178","endLine":3,"endColumn":32},{"ruleId":"175","severity":1,"message":"184","line":3,"column":33,"nodeType":"177","messageId":"178","endLine":3,"endColumn":38},{"ruleId":"175","severity":1,"message":"185","line":3,"column":39,"nodeType":"177","messageId":"178","endLine":3,"endColumn":45},{"ruleId":"175","severity":1,"message":"176","line":3,"column":46,"nodeType":"177","messageId":"178","endLine":3,"endColumn":50},{"ruleId":"175","severity":1,"message":"186","line":3,"column":51,"nodeType":"177","messageId":"178","endLine":3,"endColumn":59},{"ruleId":"175","severity":1,"message":"187","line":6,"column":8,"nodeType":"177","messageId":"178","endLine":6,"endColumn":13},{"ruleId":"175","severity":1,"message":"188","line":7,"column":8,"nodeType":"177","messageId":"178","endLine":7,"endColumn":25},{"ruleId":"175","severity":1,"message":"189","line":45,"column":7,"nodeType":"177","messageId":"178","endLine":45,"endColumn":16},{"ruleId":"190","severity":1,"message":"191","line":45,"column":60,"nodeType":"192","messageId":"193","endLine":45,"endColumn":62},{"ruleId":"194","severity":1,"message":"195","line":49,"column":31,"nodeType":"196","messageId":"197","endLine":49,"endColumn":33},{"ruleId":"194","severity":1,"message":"195","line":50,"column":5,"nodeType":"196","messageId":"197","endLine":50,"endColumn":7},{"ruleId":"175","severity":1,"message":"198","line":59,"column":7,"nodeType":"177","messageId":"178","endLine":59,"endColumn":13},{"ruleId":"175","severity":1,"message":"199","line":1,"column":15,"nodeType":"177","messageId":"178","endLine":1,"endColumn":24},{"ruleId":"175","severity":1,"message":"183","line":3,"column":26,"nodeType":"177","messageId":"178","endLine":3,"endColumn":32},{"ruleId":"175","severity":1,"message":"184","line":3,"column":33,"nodeType":"177","messageId":"178","endLine":3,"endColumn":38},{"ruleId":"175","severity":1,"message":"185","line":3,"column":39,"nodeType":"177","messageId":"178","endLine":3,"endColumn":45},{"ruleId":"175","severity":1,"message":"183","line":3,"column":26,"nodeType":"177","messageId":"178","endLine":3,"endColumn":32},{"ruleId":"175","severity":1,"message":"184","line":3,"column":33,"nodeType":"177","messageId":"178","endLine":3,"endColumn":38},{"ruleId":"175","severity":1,"message":"185","line":3,"column":39,"nodeType":"177","messageId":"178","endLine":3,"endColumn":45},{"ruleId":"175","severity":1,"message":"176","line":3,"column":46,"nodeType":"177","messageId":"178","endLine":3,"endColumn":50},{"ruleId":"175","severity":1,"message":"200","line":5,"column":8,"nodeType":"177","messageId":"178","endLine":5,"endColumn":13},{"ruleId":"175","severity":1,"message":"201","line":17,"column":10,"nodeType":"177","messageId":"178","endLine":17,"endColumn":18},{"ruleId":"202","severity":1,"message":"203","line":153,"column":26,"nodeType":"204","messageId":"205","endLine":153,"endColumn":28},{"ruleId":"202","severity":1,"message":"203","line":166,"column":32,"nodeType":"204","messageId":"205","endLine":166,"endColumn":34},{"ruleId":"175","severity":1,"message":"183","line":4,"column":26,"nodeType":"177","messageId":"178","endLine":4,"endColumn":32},{"ruleId":"175","severity":1,"message":"184","line":4,"column":33,"nodeType":"177","messageId":"178","endLine":4,"endColumn":38},{"ruleId":"175","severity":1,"message":"185","line":4,"column":39,"nodeType":"177","messageId":"178","endLine":4,"endColumn":45},{"ruleId":"175","severity":1,"message":"176","line":4,"column":46,"nodeType":"177","messageId":"178","endLine":4,"endColumn":50},{"ruleId":"175","severity":1,"message":"206","line":10,"column":10,"nodeType":"177","messageId":"178","endLine":10,"endColumn":17},{"ruleId":"175","severity":1,"message":"207","line":13,"column":10,"nodeType":"177","messageId":"178","endLine":13,"endColumn":18},{"ruleId":"175","severity":1,"message":"208","line":15,"column":10,"nodeType":"177","messageId":"178","endLine":15,"endColumn":21},{"ruleId":"175","severity":1,"message":"209","line":1,"column":8,"nodeType":"177","messageId":"178","endLine":1,"endColumn":13},{"ruleId":"202","severity":1,"message":"203","line":7,"column":21,"nodeType":"204","messageId":"205","endLine":7,"endColumn":23},{"ruleId":"202","severity":1,"message":"203","line":8,"column":41,"nodeType":"204","messageId":"205","endLine":8,"endColumn":43},{"ruleId":"202","severity":1,"message":"203","line":11,"column":46,"nodeType":"204","messageId":"205","endLine":11,"endColumn":48},{"ruleId":"210","severity":1,"message":"211","line":12,"column":28,"nodeType":"212","messageId":"213","endLine":12,"endColumn":29,"suggestions":"214"},{"ruleId":"210","severity":1,"message":"215","line":12,"column":32,"nodeType":"212","messageId":"213","endLine":12,"endColumn":33,"suggestions":"216"},{"ruleId":"210","severity":1,"message":"217","line":12,"column":40,"nodeType":"212","messageId":"213","endLine":12,"endColumn":41,"suggestions":"218"},{"ruleId":"210","severity":1,"message":"211","line":12,"column":53,"nodeType":"212","messageId":"213","endLine":12,"endColumn":54,"suggestions":"219"},{"ruleId":"210","severity":1,"message":"215","line":12,"column":57,"nodeType":"212","messageId":"213","endLine":12,"endColumn":58,"suggestions":"220"},{"ruleId":"210","severity":1,"message":"217","line":12,"column":65,"nodeType":"212","messageId":"213","endLine":12,"endColumn":66,"suggestions":"221"},{"ruleId":"210","severity":1,"message":"217","line":12,"column":74,"nodeType":"212","messageId":"213","endLine":12,"endColumn":75,"suggestions":"222"},{"ruleId":"210","severity":1,"message":"217","line":12,"column":78,"nodeType":"212","messageId":"213","endLine":12,"endColumn":79,"suggestions":"223"},{"ruleId":"210","severity":1,"message":"215","line":12,"column":94,"nodeType":"212","messageId":"213","endLine":12,"endColumn":95,"suggestions":"224"},{"ruleId":"210","severity":1,"message":"217","line":12,"column":102,"nodeType":"212","messageId":"213","endLine":12,"endColumn":103,"suggestions":"225"},{"ruleId":"210","severity":1,"message":"215","line":12,"column":119,"nodeType":"212","messageId":"213","endLine":12,"endColumn":120,"suggestions":"226"},{"ruleId":"210","severity":1,"message":"217","line":12,"column":127,"nodeType":"212","messageId":"213","endLine":12,"endColumn":128,"suggestions":"227"},{"ruleId":"202","severity":1,"message":"203","line":13,"column":32,"nodeType":"204","messageId":"205","endLine":13,"endColumn":34},{"ruleId":"202","severity":1,"message":"203","line":17,"column":46,"nodeType":"204","messageId":"205","endLine":17,"endColumn":48},{"ruleId":"202","severity":1,"message":"203","line":21,"column":46,"nodeType":"204","messageId":"205","endLine":21,"endColumn":48},{"ruleId":"202","severity":1,"message":"203","line":25,"column":46,"nodeType":"204","messageId":"205","endLine":25,"endColumn":48},{"ruleId":"228","severity":1,"message":"229","line":27,"column":13,"nodeType":"177","messageId":"230","endLine":27,"endColumn":15},{"ruleId":"202","severity":1,"message":"203","line":28,"column":32,"nodeType":"204","messageId":"205","endLine":28,"endColumn":34},{"ruleId":"202","severity":1,"message":"203","line":32,"column":44,"nodeType":"204","messageId":"205","endLine":32,"endColumn":46},{"ruleId":"228","severity":1,"message":"229","line":34,"column":13,"nodeType":"177","messageId":"230","endLine":34,"endColumn":15},{"ruleId":"202","severity":1,"message":"203","line":35,"column":32,"nodeType":"204","messageId":"205","endLine":35,"endColumn":34},{"ruleId":"202","severity":1,"message":"203","line":40,"column":44,"nodeType":"204","messageId":"205","endLine":40,"endColumn":46},{"ruleId":"228","severity":1,"message":"229","line":41,"column":13,"nodeType":"177","messageId":"230","endLine":41,"endColumn":15},{"ruleId":"202","severity":1,"message":"203","line":43,"column":32,"nodeType":"204","messageId":"205","endLine":43,"endColumn":34},{"ruleId":"202","severity":1,"message":"203","line":47,"column":44,"nodeType":"204","messageId":"205","endLine":47,"endColumn":46},{"ruleId":"228","severity":1,"message":"229","line":49,"column":13,"nodeType":"177","messageId":"230","endLine":49,"endColumn":15},{"ruleId":"202","severity":1,"message":"203","line":50,"column":32,"nodeType":"204","messageId":"205","endLine":50,"endColumn":34},{"ruleId":"202","severity":1,"message":"203","line":54,"column":45,"nodeType":"204","messageId":"205","endLine":54,"endColumn":47},{"ruleId":"202","severity":1,"message":"203","line":56,"column":71,"nodeType":"204","messageId":"205","endLine":56,"endColumn":73},{"ruleId":"202","severity":1,"message":"203","line":60,"column":44,"nodeType":"204","messageId":"205","endLine":60,"endColumn":46},{"ruleId":"228","severity":1,"message":"229","line":61,"column":13,"nodeType":"177","messageId":"230","endLine":61,"endColumn":15},{"ruleId":"202","severity":1,"message":"203","line":62,"column":32,"nodeType":"204","messageId":"205","endLine":62,"endColumn":34},{"ruleId":"202","severity":1,"message":"203","line":66,"column":44,"nodeType":"204","messageId":"205","endLine":66,"endColumn":46},{"ruleId":"228","severity":1,"message":"229","line":68,"column":13,"nodeType":"177","messageId":"230","endLine":68,"endColumn":15},{"ruleId":"202","severity":1,"message":"203","line":69,"column":32,"nodeType":"204","messageId":"205","endLine":69,"endColumn":34},{"ruleId":"175","severity":1,"message":"183","line":2,"column":26,"nodeType":"177","messageId":"178","endLine":2,"endColumn":32},{"ruleId":"175","severity":1,"message":"184","line":2,"column":33,"nodeType":"177","messageId":"178","endLine":2,"endColumn":38},{"ruleId":"175","severity":1,"message":"185","line":2,"column":39,"nodeType":"177","messageId":"178","endLine":2,"endColumn":45},{"ruleId":"175","severity":1,"message":"186","line":2,"column":51,"nodeType":"177","messageId":"178","endLine":2,"endColumn":59},{"ruleId":"202","severity":1,"message":"203","line":18,"column":23,"nodeType":"204","messageId":"205","endLine":18,"endColumn":25},{"ruleId":"202","severity":1,"message":"203","line":18,"column":65,"nodeType":"204","messageId":"205","endLine":18,"endColumn":67},{"ruleId":"231","severity":1,"message":"232","line":40,"column":7,"nodeType":"233","endLine":40,"endColumn":149},{"ruleId":"231","severity":1,"message":"232","line":42,"column":8,"nodeType":"233","endLine":42,"endColumn":95},{"ruleId":"202","severity":1,"message":"203","line":45,"column":57,"nodeType":"204","messageId":"205","endLine":45,"endColumn":59},{"ruleId":"231","severity":1,"message":"232","line":46,"column":13,"nodeType":"233","endLine":46,"endColumn":74},{"ruleId":"231","severity":1,"message":"232","line":52,"column":8,"nodeType":"233","endLine":52,"endColumn":133},{"ruleId":"231","severity":1,"message":"232","line":54,"column":8,"nodeType":"233","endLine":54,"endColumn":206},{"ruleId":"171","replacedBy":"234"},{"ruleId":"173","replacedBy":"235"},{"ruleId":"175","severity":1,"message":"236","line":40,"column":39,"nodeType":"177","messageId":"178","endLine":40,"endColumn":43},{"ruleId":"175","severity":1,"message":"236","line":57,"column":54,"nodeType":"177","messageId":"178","endLine":57,"endColumn":58},{"ruleId":"237","severity":1,"message":"238","line":84,"column":7,"nodeType":"239","endLine":84,"endColumn":9,"suggestions":"240"},{"ruleId":"202","severity":1,"message":"203","line":105,"column":78,"nodeType":"204","messageId":"205","endLine":105,"endColumn":80},{"ruleId":"175","severity":1,"message":"236","line":119,"column":43,"nodeType":"177","messageId":"178","endLine":119,"endColumn":47},{"ruleId":"175","severity":1,"message":"241","line":162,"column":11,"nodeType":"177","messageId":"178","endLine":162,"endColumn":20},"no-native-reassign",["242"],"no-negated-in-lhs",["243"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'activeBox' is assigned a value but never used.","'setActiveBox' is assigned a value but never used.","'currentLocation' is assigned a value but never used.","'useState' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'Redirect' is defined but never used.","'Input' is defined but never used.","'ValidationLibrary' is defined but never used.","'searching' is assigned a value but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","'logout' is assigned a value but never used.","'useEffect' is defined but never used.","'Users' is defined but never used.","'editopen' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'loading' is assigned a value but never used.","'hasError' is assigned a value but never used.","'userDetails' is assigned a value but never used.","'React' is defined but never used.","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["244","245"],"Unnecessary escape character: \\..",["246","247"],"Unnecessary escape character: \\\".",["248","249"],["250","251"],["252","253"],["254","255"],["256","257"],["258","259"],["260","261"],["262","263"],["264","265"],["266","267"],"no-redeclare","'re' is already defined.","redeclared","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["242"],["243"],"'role' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'add', 'userId', and 'users'. Either include them or remove the dependency array.","ArrayExpression",["268"],"'resetForm' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"messageId":"269","fix":"270","desc":"271"},{"messageId":"272","fix":"273","desc":"274"},{"messageId":"269","fix":"275","desc":"271"},{"messageId":"272","fix":"276","desc":"274"},{"messageId":"269","fix":"277","desc":"271"},{"messageId":"272","fix":"278","desc":"274"},{"messageId":"269","fix":"279","desc":"271"},{"messageId":"272","fix":"280","desc":"274"},{"messageId":"269","fix":"281","desc":"271"},{"messageId":"272","fix":"282","desc":"274"},{"messageId":"269","fix":"283","desc":"271"},{"messageId":"272","fix":"284","desc":"274"},{"messageId":"269","fix":"285","desc":"271"},{"messageId":"272","fix":"286","desc":"274"},{"messageId":"269","fix":"287","desc":"271"},{"messageId":"272","fix":"288","desc":"274"},{"messageId":"269","fix":"289","desc":"271"},{"messageId":"272","fix":"290","desc":"274"},{"messageId":"269","fix":"291","desc":"271"},{"messageId":"272","fix":"292","desc":"274"},{"messageId":"269","fix":"293","desc":"271"},{"messageId":"272","fix":"294","desc":"274"},{"messageId":"269","fix":"295","desc":"271"},{"messageId":"272","fix":"296","desc":"274"},{"desc":"297","fix":"298"},"removeEscape",{"range":"299","text":"300"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"301","text":"302"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"303","text":"300"},{"range":"304","text":"302"},{"range":"305","text":"300"},{"range":"306","text":"302"},{"range":"307","text":"300"},{"range":"308","text":"302"},{"range":"309","text":"300"},{"range":"310","text":"302"},{"range":"311","text":"300"},{"range":"312","text":"302"},{"range":"313","text":"300"},{"range":"314","text":"302"},{"range":"315","text":"300"},{"range":"316","text":"302"},{"range":"317","text":"300"},{"range":"318","text":"302"},{"range":"319","text":"300"},{"range":"320","text":"302"},{"range":"321","text":"300"},{"range":"322","text":"302"},{"range":"323","text":"300"},{"range":"324","text":"302"},"Update the dependencies array to be: [add, userId, users]",{"range":"325","text":"326"},[577,578],"",[577,577],"\\",[581,582],[581,581],[589,590],[589,589],[602,603],[602,602],[606,607],[606,606],[614,615],[614,614],[623,624],[623,623],[627,628],[627,627],[643,644],[643,643],[651,652],[651,651],[668,669],[668,668],[676,677],[676,676],[2542,2544],"[add, userId, users]"]