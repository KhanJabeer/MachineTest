<<<<<<< HEAD
[{"D:\\Task\\cchhhhh\\MachineTest\\machine-test\\src\\index.js":"1","D:\\Task\\cchhhhh\\MachineTest\\machine-test\\src\\App.js":"2","D:\\Task\\cchhhhh\\MachineTest\\machine-test\\src\\reportWebVitals.js":"3","D:\\Task\\cchhhhh\\MachineTest\\machine-test\\src\\utils\\Users.js":"4","D:\\Task\\cchhhhh\\MachineTest\\machine-test\\src\\routes\\PrivateRoute.js":"5","D:\\Task\\cchhhhh\\MachineTest\\machine-test\\src\\Components\\Login\\Login.jsx":"6","D:\\Task\\cchhhhh\\MachineTest\\machine-test\\src\\Components\\Dashboard\\Dashboard.jsx":"7","D:\\Task\\cchhhhh\\MachineTest\\machine-test\\src\\Components\\UserManage\\UserManage.jsx":"8","D:\\Task\\cchhhhh\\MachineTest\\machine-test\\src\\Components\\UsermanageModal\\UserdeleteModal.jsx":"9","D:\\Task\\cchhhhh\\MachineTest\\machine-test\\src\\Components\\UsermanageModal\\UsermanageModal.jsx":"10","D:\\Task\\cchhhhh\\MachineTest\\machine-test\\src\\Components\\Pagination\\Pagination.jsx":"11","D:\\Task\\cchhhhh\\MachineTest\\machine-test\\src\\Components\\TodoList\\TodoList.jsx":"12"},{"size":517,"mtime":1607083637065,"results":"13","hashOfConfig":"14"},{"size":2210,"mtime":1607164699822,"results":"15","hashOfConfig":"14"},{"size":375,"mtime":1607083637105,"results":"16","hashOfConfig":"14"},{"size":944,"mtime":1607083944375,"results":"17","hashOfConfig":"14"},{"size":808,"mtime":1607088835385,"results":"18","hashOfConfig":"14"},{"size":1929,"mtime":1607083944373,"results":"19","hashOfConfig":"14"},{"size":3826,"mtime":1607167243754,"results":"20","hashOfConfig":"14"},{"size":4950,"mtime":1607167539549,"results":"21","hashOfConfig":"14"},{"size":930,"mtime":1607083944374,"results":"22","hashOfConfig":"14"},{"size":4341,"mtime":1607087466483,"results":"23","hashOfConfig":"14"},{"size":2328,"mtime":1607170530804,"results":"24","hashOfConfig":"14"},{"size":3683,"mtime":1607165180308,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"88duhr",{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"28"},"D:\\Task\\cchhhhh\\MachineTest\\machine-test\\src\\index.js",[],["59","60"],"D:\\Task\\cchhhhh\\MachineTest\\machine-test\\src\\App.js",["61"],"import React,{useEffect, useState} from \"react\";\r\nimport {BrowserRouter as Router,Route,Link} from \"react-router-dom\";\r\nimport Login from './Components/Login/Login'\r\nimport Dashboard from './Components/Dashboard/Dashboard'\r\nimport UserManage from './Components/UserManage/UserManage'\r\nimport TodoList from './Components/TodoList/TodoList'\r\nimport \"./index.css\";\r\nimport \"./App.css\";\r\nimport Users from \"./utils/Users\";\r\nimport PrivateRoute from \"./routes/PrivateRoute\";\r\n\r\nconst App = () => {\r\n\r\n  const [isAuthenticated,setAuthenticated] = useState(null)\r\n  const [users,setUsers] = useState([])\r\n  const [loggedInUser,setLoggedInUser] = useState(null)\r\n\r\n  useEffect(() => {\r\n\r\n     if(!localStorage.loggedInUser) {\r\n       localStorage.setItem(\"loggedInUser\",\"\")\r\n     }\r\n     \r\n      if(!localStorage.users) {\r\n        localStorage.setItem(\"users\",JSON.stringify(Users))\r\n\r\n        const userDetails = JSON.parse(localStorage.getItem(\"users\"))\r\n        setUsers(userDetails)\r\n      }else {\r\n        const userDetails = JSON.parse(localStorage.getItem(\"users\"))\r\n        setUsers(userDetails)\r\n      }\r\n\r\n      console.log(\"sadfjashldfjsdf\",localStorage.loggedInUser === \"\")\r\n\r\n      if(localStorage.loggedInUser === \"\") {\r\n         setAuthenticated(false)\r\n      }else {\r\n        setAuthenticated(true)\r\n        const loggedUser = JSON.parse(localStorage.getItem(\"loggedInUser\"))\r\n        setLoggedInUser(loggedUser)\r\n      }\r\n  },[])\r\n\r\n  const changeAuth = () => {\r\n    setAuthenticated(true)\r\n    const loggedUser = JSON.parse(localStorage.getItem(\"loggedInUser\"))\r\n    setLoggedInUser(loggedUser)\r\n  }\r\n\r\n \r\n  return(\r\n    <div className=\"App\">\r\n        \r\n    <Router> \r\n\r\n      \r\n           <Route exact  path=\"/\" render={(props) => <Login {...props} changeAuth={changeAuth} users={users} /> }/> \r\n           <PrivateRoute path=\"/todolist\"  component={TodoList} isAuthenticated={isAuthenticated} />\r\n           <PrivateRoute path=\"/usermanage\"  component={UserManage} isAuthenticated={isAuthenticated} />\r\n           <PrivateRoute path=\"/dashboard\" component={Dashboard} isAuthenticated={isAuthenticated} loggedInUser={loggedInUser} />\r\n\r\n    </Router> \r\n     </div>\r\n  )\r\n  }\r\n\r\n\r\nexport default App;","D:\\Task\\cchhhhh\\MachineTest\\machine-test\\src\\reportWebVitals.js",[],"D:\\Task\\cchhhhh\\MachineTest\\machine-test\\src\\utils\\Users.js",[],"D:\\Task\\cchhhhh\\MachineTest\\machine-test\\src\\routes\\PrivateRoute.js",["62"],"import React,{useState,useEffect} from \"react\";\r\nimport {Route,Redirect,withRouter} from \"react-router-dom\";\r\n\r\n\r\nconst PrivateRoute = ({ component:Component,isAuthenticated,loggedInUser,history,...rest }) => {\r\n\r\n  console.log(\"sdfjksdhfjsf\",loggedInUser)\r\n    useEffect(() => {\r\n    loggedInUser && (window.location.pathname === \"/usermanage\" && \"/post\")  && loggedInUser.role === \"user\" && history.push(\"/dashboard\" && \"/post\")\r\n    },[loggedInUser,history])\r\n\r\nreturn(\r\n    <Route \r\n    {...rest} \r\n    render={ (props) => !isAuthenticated && isAuthenticated !== null ? \r\n    (<Redirect to=\"/\" />) \r\n     : \r\n    (\r\n      \r\n      <Component {...props} loggedInUser={loggedInUser} />\r\n    ) \r\n\r\n     }\r\n     />\r\n)\r\n   \r\n\r\n    }\r\n           \r\n               \r\n\r\n\r\nexport default withRouter(PrivateRoute);\r\n","D:\\Task\\cchhhhh\\MachineTest\\machine-test\\src\\Components\\Login\\Login.jsx",["63","64","65","66"],"import React,{useEffect,useState} from \"react\";\r\nimport './Login.css'\r\nimport {BrowserRouter as Router,Route,Switch} from \"react-router-dom\";\r\n\r\n\r\n\r\nconst Login = ({ users,changeAuth,history }) => {\r\n\r\nconst handleSubmit =(e)=>{\r\n    e.preventDefault()\r\n  \r\n    const validUser = users && users.findIndex(user => user.email === loginData.email && user.password === loginData.password)\r\n    console.log(\"validUserCheck\",validUser)\r\n    if(validUser !== -1) {\r\n      localStorage.setItem(\"loggedInUser\",JSON.stringify(users[validUser]))\r\n      changeAuth()\r\n      history.push(\"/dashboard\")\r\n    }else {\r\n      alert(\"Invalid email or password\")\r\n    }\r\n}   \r\n\r\nconst [loginData,setLoginData] = useState({email:\"\",password:\"\"})\r\n\r\nconst {email,password} = loginData;\r\n\r\nconst handleChange = (e) => {\r\n  setLoginData({...loginData,[e.target.name]:e.target.value})\r\n}\r\n\r\n  return(\r\n    <div className=\"login_content\">\r\n        <header>\r\n      <h1>Machine Test</h1>\r\n          <h1>Login</h1>\r\n        </header>\r\n\r\n        <form  onSubmit={handleSubmit}>\r\n            <div className=\"login_fields\">\r\n                <input \r\n                className=\"input_boxes\"\r\n                type=\"email\" \r\n                name=\"email\" \r\n                value={email}\r\n                placeholder=\"Email\" \r\n                onChange={(e) => handleChange(e)}\r\n                required />\r\n            </div>\r\n\r\n            <div className=\"login_fields\">\r\n                <input \r\n                className=\"input_boxes\"\r\n                type=\"password\" \r\n                name=\"password\"\r\n                value={password}\r\n                placeholder=\"Password\"\r\n                onChange={(e) => handleChange(e)}\r\n                required/>\r\n            </div>\r\n\r\n            <div className=\"login_btn\">\r\n            <button onClick={handleSubmit}>Login</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n  )\r\n  }\r\n\r\n\r\nexport default Login;","D:\\Task\\cchhhhh\\MachineTest\\machine-test\\src\\Components\\Dashboard\\Dashboard.jsx",["67","68","69","70"],"import React,{useEffect,useState} from \"react\";\r\nimport './Dashboard.css'\r\nimport {BrowserRouter as Router,Route,Switch,Link,Redirect} from \"react-router-dom\";\r\nimport Pagination,{PaginationHelper} from '../Pagination/Pagination';\r\n\r\n\r\nconst Dashboard = ({ loggedInUser,history }) => {\r\n\r\n\r\n  const [userDetails,setUserDetails] = useState([])\r\n\r\n  const [currId,setCurrId] = useState(null)\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [postsPerPage] = useState(5);\r\n  const [paginationIndex,updatePaginationIndex] =useState(0);\r\n  \r\n\r\n  useEffect(() => {\r\n    loadUserDetails()\r\n},[])\r\n\r\n\r\nconst loadUserDetails = () => {\r\n  if(localStorage.users) {\r\n    const user = JSON.parse(localStorage.getItem(\"users\"))\r\n    setUserDetails(user)\r\n  }\r\n\r\n  if(localStorage.loggedInUser) {\r\n    const user = JSON.parse(localStorage.getItem(\"loggedInUser\"))\r\n  \r\n    setCurrId(user.userId)\r\n  }\r\n}\r\n\r\n\r\nconst logout = () => {\r\n  localStorage.setItem(\"loggedInUser\",\"\")\r\n  history.push(\"/\")\r\n}\r\n\r\n  // Get current posts\r\n  const indexOfLastPost = currentPage * postsPerPage;\r\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n  const currentPosts = userDetails && userDetails.filter((user)=>user.role === \"user\" && user.userId !== currId).slice            (indexOfFirstPost, indexOfLastPost);\r\n\r\n  // Change page\r\n  const setpaginate = (pageNumber,click_data) => {\r\n\r\n    var gethelperData=PaginationHelper.checkingPaginationProcess(pageNumber,click_data,null,userDetails,postsPerPage,currentPage);\r\n    if(gethelperData.pageNumber){\r\n      setCurrentPage(gethelperData.pageNumber);\r\n    }\r\n    if(gethelperData.totalmovedpage>=0){\r\n      updatePaginationIndex(gethelperData.totalmovedpage);\r\n    }\r\n\r\n  }\r\n\r\n  const updatePaginationData=(data,totalnumbers)=>{\r\n\r\n    updatePaginationIndex(data);\r\n    var gethelperData=PaginationHelper.checkingPaginationProcess((data*5)+1,null,totalnumbers,userDetails,postsPerPage,currentPage);\r\n    if(gethelperData.pageNumber){\r\n      setCurrentPage(gethelperData.pageNumber);\r\n    }\r\n\r\n  }\r\n\r\n  return(\r\n    <div>      \r\n       <header className=\"dash_heads\">\r\n           <div className=\"dash_title\">\r\n           <div>\r\n           <Link to=\"/dashboard\" className=\"link_header\">Dashboard</Link>\r\n           </div>\r\n           \r\n          {loggedInUser && loggedInUser.role !== \"user\" && <div>\r\n              <Link to=\"/usermanage\" className=\"link_header\">User Management</Link>\r\n           </div>}\r\n           <div>\r\n           <Link to=\"/todolist\" className=\"link_header\">Todo List</Link>\r\n           </div>\r\n           </div>\r\n           <div>\r\n           <div className=\"logout_btn\" >\r\n             <div className=\"logged_user\">{loggedInUser && loggedInUser.name}</div>\r\n              <button onClick={logout}>Log out</button>\r\n           </div>\r\n\r\n           </div>\r\n        </header>\r\n\r\n           <div className=\"dash_content\">\r\n\r\n           <div className=\"userstatus_header\">\r\n             <div>User List</div>\r\n             <div>Status</div>\r\n             </div>\r\n            {currentPosts && currentPosts.length > 0 && currentPosts.map((user) => {\r\n              return(\r\n                 <div className=\"users\"><div className=\"user_names\">{user.name}</div><div className=\"status\">{user.status}</div></div>\r\n              )\r\n            })}\r\n           </div>\r\n\r\n           <Pagination\r\n            postsPerPage={postsPerPage}\r\n            totalPosts={userDetails && userDetails.length}\r\n            paginationIndex={paginationIndex}\r\n            udpatePageNumber={(i)=>setCurrentPage(i)}\r\n            paginate={(data)=>setpaginate(data,'click')}\r\n            updatePaginationIndex={(data,totalnumbers)=>updatePaginationData(data,totalnumbers)}\r\n            pageNo={currentPage && currentPage}\r\n            />\r\n\r\n    </div>\r\n  )\r\n  }\r\n\r\n\r\nexport default Dashboard;","D:\\Task\\cchhhhh\\MachineTest\\machine-test\\src\\Components\\UserManage\\UserManage.jsx",["71","72","73","74","75","76","77"],"import React,{useEffect,useState} from \"react\";\r\nimport './UserManage.css'\r\nimport {BrowserRouter as Router,Route,Switch,Link} from \"react-router-dom\";\r\nimport { MdModeEdit, MdDelete } from \"react-icons/md\";\r\nimport Users from \"../../utils/Users\";\r\nimport UserManageModal from \"../UsermanageModal/UsermanageModal\";\r\nimport UserdeleteManage from \"../UsermanageModal/UserdeleteModal\";\r\nimport Pagination from '../Pagination/Pagination';\r\n\r\n\r\nconst UserManage = () => {\r\n\r\n \r\n  const [insertopen,setinsertopen] = useState(false)\r\n  const [editopen,seteditopen] = useState(false)\r\n\r\n  const [opendelete,setopendelete] = useState(false)\r\n  const [userDetails,setUserDetails] = useState([]);\r\n  const [loggedInUser,setLoggedInUser] = useState(null)\r\n\r\n  const [userId,setUserId] = useState(null)\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const [currId,setCurrId] = useState(null)\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [postsPerPage] = useState(5);\r\n  const [paginationIndex,updatePaginationIndex] =useState(0);\r\n\r\n  useEffect(() => {\r\n      loadUserDetails()\r\n  },[])\r\n\r\n\r\n  const loadUserDetails = () => {\r\n   \r\n    if(localStorage.users) {\r\n      const user = JSON.parse(localStorage.getItem(\"users\"))\r\n      setUserDetails(user)\r\n    }\r\n\r\n    if(localStorage.loggedInUser) {\r\n      const user = JSON.parse(localStorage.getItem(\"loggedInUser\"))\r\n      setLoggedInUser(user)\r\n      setCurrId(user.userId)\r\n    }\r\n  }\r\n\r\n  const addModal = ()=> {\r\n    setOpen(true);\r\n    setinsertopen(true)\r\n    seteditopen(false)\r\n\r\n  }\r\n\r\n  const editModal = (userId)=> {\r\n    setUserId(userId)\r\n    setOpen(true)\r\n    seteditopen(true)\r\n    setinsertopen(false)\r\n  }\r\n\r\n  const deleteOpen = (userId)=>{\r\n    setUserId(userId)\r\n    setopendelete(true)\r\n  }\r\n\r\n\r\n  const handleClose =()=>{\r\n    setOpen(false);\r\n    setinsertopen(false)\r\n    seteditopen(false)\r\n    setopendelete(false)\r\n}\r\n\r\n  // Get current posts\r\n  const indexOfLastPost = currentPage * postsPerPage;\r\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n  const currentPosts = userDetails && userDetails.filter((user)=>user.role === \"user\" && user.userId !== currId).slice\r\n  (indexOfFirstPost, indexOfLastPost);\r\n\r\n  // Change page\r\n  const managePage = managePage => setCurrentPage(managePage);\r\n\r\n\r\n  return(\r\n    <div>\r\n       <header className=\"usermanage_heads\">\r\n         <div className=\"usermanage_title\">\r\n        \r\n         <Link to=\"/dashboard\" className=\"link_header\">DashBoard</Link>\r\n         {loggedInUser&& loggedInUser.role !== \"user\" && <Link to=\"/usermanage\" className=\"link_header\">User Management</Link>}\r\n         <Link to=\"/todolist\" className=\"link_header\">Todo List</Link>\r\n        </div>\r\n        \r\n\r\n        <div>\r\n         {loggedInUser && (loggedInUser.role === \"root\" ||  \"admin\") &&<div className=\"useradd_btn\">\r\n           <button onClick={addModal}>Add User</button>\r\n         </div>}\r\n         </div>\r\n        </header>\r\n     \r\n        <div className=\"usermanage_content\">\r\n      \r\n        <div className=\"usermanage_header\">User List<span>Action</span></div>\r\n            {currentPosts && currentPosts.length > 0 && currentPosts.map((user) => {\r\n              return(\r\n              \r\n                <div className=\"users\">\r\n                <div className=\"usermanage_names\">{user.name}</div>\r\n                <div className=\"action_icons\">\r\n                {(loggedInUser.role === \"root\" ||  \"admin\") && <MdModeEdit  className=\"edit_icon\" onClick={() => editModal(user.userId)}/>}\r\n                  {loggedInUser.role === \"root\" && <MdDelete className=\"delete_icon\" onClick={() => deleteOpen(user.userId)}/>}\r\n                </div>\r\n                </div>\r\n              )\r\n            })}\r\n             \r\n         \r\n        </div>\r\n\r\n        {\r\n        open && \r\n         <div \r\n         open={open}\r\n         onClose={handleClose}\r\n         title={insertopen ? \"Add User\" : \"Edit User\"}\r\n         className={open == true ? \"modal_open\" : \"modal_close\" }\r\n         >\r\n           \r\n        <UserManageModal  add={insertopen} onClose={handleClose} users={userDetails} userId={userId} />\r\n\r\n        </div>\r\n        }\r\n\r\n      {\r\n        opendelete && \r\n         <div \r\n         open={deleteOpen}\r\n         onClose={handleClose}\r\n         className={opendelete == true ? \"modal_open\" : \"modal_close\" }         >\r\n\r\n        <UserdeleteManage onClose={handleClose} users={userDetails}  userId={userId} loadUserDetails={loadUserDetails} />\r\n\r\n        </div>\r\n        }\r\n\r\n            <Pagination\r\n            postsPerPage={postsPerPage}\r\n            totalPosts={userDetails && userDetails.length}\r\n            paginate={managePage}\r\n            paginationIndex={paginationIndex}\r\n            updatePaginationIndex={(data)=>updatePaginationIndex(data)}\r\n            udpatePageNumber={(i)=>setCurrentPage(i)}\r\n            pageNo={currentPage && currentPage}\r\n            />\r\n\r\n    </div>\r\n  )\r\n  }\r\n\r\n\r\nexport default UserManage;","D:\\Task\\cchhhhh\\MachineTest\\machine-test\\src\\Components\\UsermanageModal\\UserdeleteModal.jsx",[],["78","79"],"D:\\Task\\cchhhhh\\MachineTest\\machine-test\\src\\Components\\UsermanageModal\\UsermanageModal.jsx",["80","81"],"import React,{useState,useEffect} from \"react\";\r\nimport './UsermanageModal.css'\r\nimport { uuid } from 'uuidv4';\r\n\r\n\r\nconst UserManageModal = ({ add,users,userId,onClose }) => {\r\n\r\n    const [userData,setUserData] = useState({\r\n        name:\"\",\r\n        email:\"\",\r\n        address:\"\",\r\n        country:\"\",\r\n        status:\"active\",\r\n        role:\"user\"\r\n    })\r\n    \r\n    const [userIndex,setIndex] = useState(null)\r\n\r\n    const {name,email,address,country,status,role} = userData;\r\n\r\n    const handleChange = (e) => {\r\n        setUserData({...userData,[e.target.name]:e.target.value})\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(!add) {\r\n            const findUser = users && users.find(user => user.userId === userId)\r\n            const findIndex = users && users.map(user => user.userId).indexOf(userId)\r\n\r\n            setIndex(findIndex)\r\n\r\n            console.log(\"sdfkjsahdfjasd\",findIndex)\r\n            const {name,email,address,country,status,role} = findUser;\r\n            setUserData({\r\n                name,email,address,country,status,role\r\n            })\r\n        }\r\n    },[])\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        let validUser =  users && users.find(user => user.email === email)\r\n\r\n        if(add && validUser) {\r\n            alert(\"User already exists\")\r\n        }\r\n\r\n        if(add && !validUser) {\r\n\r\n            users && users.push({userId:uuid(),name,email,address,country,status,role})\r\n            localStorage.setItem(\"users\",JSON.stringify(users))\r\n            onClose();\r\n        }\r\n\r\n        if(!add) {\r\n            const editUser = users.some((user,index) => { \r\n                return userIndex !== index && user.email === email\r\n            })\r\n\r\n            console.log(\"sdfsdfhsf\",editUser)\r\n\r\n            if(!editUser) {\r\n            users[userIndex].name = name;\r\n            users[userIndex].email = email;\r\n            users[userIndex].address = address;\r\n            users[userIndex].country = country;\r\n            users[userIndex].status = status;\r\n            users[userIndex].role = role;\r\n\r\n            localStorage.setItem(\"users\",JSON.stringify(users))\r\n            onClose()\r\n        }else{\r\n            alert(\"user already exists\")\r\n        }\r\n\r\n        }\r\n        console.log(\"asdfjsadhfjhads\",users)\r\n    }\r\n\r\n    const resetForm = () => {\r\n        setUserData({\r\n            name:\"\",\r\n            email:\"\",\r\n            address:\"\",\r\n            country:\"\",\r\n            status:\"active\",\r\n            role:\"user\"\r\n        })\r\n    }\r\n\r\n  return(\r\n    <div className=\"modal\">\r\n     <div className=\"modal_title\">{ add ? \"ADD USER\" : \"EDIT USER\" }</div>\r\n     <div className=\"divider\"/>\r\n     <form onSubmit={(e) => handleSubmit(e)}>\r\n\r\n     <div className=\"grid-container\">\r\n\r\n     <div className=\"grid-item\">\r\n         <div className=\"field_label\">Name</div>\r\n         <input className=\"userdata_fields\" type=\"text\" name=\"name\" value={name} onChange={(e) => handleChange(e)} required />\r\n     </div>\r\n\r\n     <div className=\"grid-item\">\r\n         <div className=\"field_label\">Email</div>\r\n         <input className=\"userdata_fields\" type=\"email\" name=\"email\" value={email} onChange={(e) => handleChange(e)} required />\r\n     </div>\r\n\r\n     <div className=\"grid-item\">\r\n         <div className=\"field_label\">Address</div>\r\n         <input className=\"userdata_fields\" type=\"text\" name=\"address\" value={address} onChange={(e) => handleChange(e)} required />\r\n     </div>\r\n\r\n     <div className=\"grid-item\">\r\n         <div className=\"field_label\">Country</div>\r\n         <input className=\"userdata_fields\" type=\"text\" name=\"country\" value={country} onChange={(e) => handleChange(e)} required />\r\n     </div>\r\n\r\n     <div className=\"grid-item\">\r\n         <div className=\"field_label\">Status</div>\r\n         <select className=\"status_fields\" name=\"status\" value={status}  onChange={(e) => handleChange(e)} >\r\n            <option value=\"active\">Active</option>\r\n            <option value=\"inactive\">In-Active</option>\r\n        </select>     \r\n        </div>\r\n\r\n    </div>\r\n  \r\n    <div className=\"btn_wraps\">\r\n        <button className=\"cancel_btn\" onClick={() => onClose()}>Cancel</button>    \r\n        <button className=\"addedit_btn\" type=\"submit\" >{add ? \"ADD\" : \"UPDATE\"}</button>\r\n    </div>\r\n    </form>\r\n    </div>\r\n  )\r\n  }\r\n\r\n\r\nexport default UserManageModal;","D:\\Task\\cchhhhh\\MachineTest\\machine-test\\src\\Components\\Pagination\\Pagination.jsx",["82","83","84","85","86","87","88","89"],"D:\\Task\\cchhhhh\\MachineTest\\machine-test\\src\\Components\\TodoList\\TodoList.jsx",["90","91","92","93","94","95"],"import React, { useState, useEffect } from 'react';\r\nimport  './TodoList.css';\r\nimport Pagination,{PaginationHelper} from '../Pagination/Pagination';\r\nimport {BrowserRouter as Router,Route,Switch,Link} from \"react-router-dom\";\r\n\r\n\r\nconst TodoList = () => {\r\n  const [posts, setPosts] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [postsPerPage] = useState(10);\r\n  const [hasError, setErrors] = useState(false);\r\n  const [paginationIndex,updatePaginationIndex] =useState(0);\r\n  const [userDetails,setUserDetails] = useState([]);\r\n  const [loggedInUser,setLoggedInUser] = useState(null)\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    const fetchPosts = async () => {\r\n      setLoading(true);\r\n      const res = await fetch('https://jsonplaceholder.typicode.com/todos')\r\n      res.json()\r\n      .then(res => setPosts(res),console.log(res,\"scfksdnkfjskdf\"))\r\n      \r\n      .catch(err => setErrors(err)); \r\n      setLoading(false);\r\n    \r\n    };\r\n\r\n    fetchPosts();\r\n    loadUserDetails();\r\n  }, []);\r\n\r\n \r\n\r\n  // Get current posts\r\n  const indexOfLastPost = currentPage * postsPerPage;\r\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n  const currentPosts = posts && posts.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n  // Change page\r\n  const setpaginate = (pageNumber,click_data) => {\r\n\r\n    var gethelperData=PaginationHelper.checkingPaginationProcess(pageNumber,click_data,null,posts,postsPerPage,currentPage);\r\n    if(gethelperData.pageNumber){\r\n      setCurrentPage(gethelperData.pageNumber);\r\n    }\r\n    if(gethelperData.totalmovedpage>=0){\r\n      updatePaginationIndex(gethelperData.totalmovedpage);\r\n    }\r\n\r\n  }\r\n\r\n  const loadUserDetails = () => {\r\n   \r\n    if(localStorage.users) {\r\n      const user = JSON.parse(localStorage.getItem(\"users\"))\r\n      setUserDetails(user)\r\n    }\r\n\r\n    if(localStorage.loggedInUser) {\r\n      const user = JSON.parse(localStorage.getItem(\"loggedInUser\"))\r\n      setLoggedInUser(user)\r\n     \r\n    }\r\n  }\r\n  const updatePaginationData=(data,totalnumbers)=>{\r\n    updatePaginationIndex(data);\r\n    var gethelperData=PaginationHelper.checkingPaginationProcess((data*5)+1,null,totalnumbers,posts,postsPerPage,currentPage);\r\n    if(gethelperData.pageNumber){\r\n      setCurrentPage(gethelperData.pageNumber);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='container mt-5'>\r\n      \r\n        <div className=\"post_title\">\r\n        <Link to=\"/dashboard\" className=\"link_header\">DashBoard</Link>  \r\n        {loggedInUser && loggedInUser.role !== \"user\" &&<Link to=\"/usermanage\" className=\"link_header\">User Management</Link>}\r\n        <Link to=\"/todolist\" className=\"link_header\">Todo List</Link>\r\n        </div>\r\n      \r\n        <table className=\"table_style\">\r\n   \r\n            <tr>\r\n                <th>To Do Task</th>\r\n                <th>Status</th>\r\n                \r\n            </tr>\r\n         \r\n            {currentPosts && currentPosts.map(currentPosts => (\r\n            \r\n           <tr>\r\n            \r\n                <td>{currentPosts.title}</td>\r\n                <td>{currentPosts.completed}</td>\r\n               \r\n            \r\n            </tr>\r\n            ))} \r\n        \r\n    </table>\r\n\r\n     \r\n    \r\n   \r\n   \r\n      <Pagination\r\n        postsPerPage={postsPerPage}\r\n        totalPosts={posts && posts.length}\r\n        paginate={(data)=>setpaginate(data,'click')}\r\n        paginationIndex={paginationIndex}\r\n        updatePaginationIndex={(data,totalnumbers)=>updatePaginationData(data,totalnumbers)}\r\n        udpatePageNumber={(i)=>setCurrentPage(i)}\r\n        pageNo={currentPage && currentPage}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoList;",{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":2,"column":39,"nodeType":"102","messageId":"103","endLine":2,"endColumn":43},{"ruleId":"100","severity":1,"message":"104","line":1,"column":15,"nodeType":"102","messageId":"103","endLine":1,"endColumn":23},{"ruleId":"100","severity":1,"message":"105","line":1,"column":15,"nodeType":"102","messageId":"103","endLine":1,"endColumn":24},{"ruleId":"100","severity":1,"message":"106","line":3,"column":26,"nodeType":"102","messageId":"103","endLine":3,"endColumn":32},{"ruleId":"100","severity":1,"message":"107","line":3,"column":33,"nodeType":"102","messageId":"103","endLine":3,"endColumn":38},{"ruleId":"100","severity":1,"message":"108","line":3,"column":39,"nodeType":"102","messageId":"103","endLine":3,"endColumn":45},{"ruleId":"100","severity":1,"message":"106","line":3,"column":26,"nodeType":"102","messageId":"103","endLine":3,"endColumn":32},{"ruleId":"100","severity":1,"message":"107","line":3,"column":33,"nodeType":"102","messageId":"103","endLine":3,"endColumn":38},{"ruleId":"100","severity":1,"message":"108","line":3,"column":39,"nodeType":"102","messageId":"103","endLine":3,"endColumn":45},{"ruleId":"100","severity":1,"message":"109","line":3,"column":51,"nodeType":"102","messageId":"103","endLine":3,"endColumn":59},{"ruleId":"100","severity":1,"message":"106","line":3,"column":26,"nodeType":"102","messageId":"103","endLine":3,"endColumn":32},{"ruleId":"100","severity":1,"message":"107","line":3,"column":33,"nodeType":"102","messageId":"103","endLine":3,"endColumn":38},{"ruleId":"100","severity":1,"message":"108","line":3,"column":39,"nodeType":"102","messageId":"103","endLine":3,"endColumn":45},{"ruleId":"100","severity":1,"message":"110","line":5,"column":8,"nodeType":"102","messageId":"103","endLine":5,"endColumn":13},{"ruleId":"100","severity":1,"message":"111","line":15,"column":10,"nodeType":"102","messageId":"103","endLine":15,"endColumn":18},{"ruleId":"112","severity":1,"message":"113","line":128,"column":26,"nodeType":"114","messageId":"115","endLine":128,"endColumn":28},{"ruleId":"112","severity":1,"message":"113","line":141,"column":32,"nodeType":"114","messageId":"115","endLine":141,"endColumn":34},{"ruleId":"96","replacedBy":"116"},{"ruleId":"98","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":38,"column":7,"nodeType":"120","endLine":38,"endColumn":9,"suggestions":"121"},{"ruleId":"100","severity":1,"message":"122","line":80,"column":11,"nodeType":"102","messageId":"103","endLine":80,"endColumn":20},{"ruleId":"112","severity":1,"message":"113","line":18,"column":23,"nodeType":"114","messageId":"115","endLine":18,"endColumn":25},{"ruleId":"112","severity":1,"message":"113","line":18,"column":65,"nodeType":"114","messageId":"115","endLine":18,"endColumn":67},{"ruleId":"123","severity":1,"message":"124","line":40,"column":7,"nodeType":"125","endLine":40,"endColumn":149},{"ruleId":"123","severity":1,"message":"124","line":42,"column":8,"nodeType":"125","endLine":42,"endColumn":95},{"ruleId":"112","severity":1,"message":"113","line":45,"column":57,"nodeType":"114","messageId":"115","endLine":45,"endColumn":59},{"ruleId":"123","severity":1,"message":"124","line":46,"column":13,"nodeType":"125","endLine":46,"endColumn":74},{"ruleId":"123","severity":1,"message":"124","line":52,"column":8,"nodeType":"125","endLine":52,"endColumn":133},{"ruleId":"123","severity":1,"message":"124","line":54,"column":8,"nodeType":"125","endLine":54,"endColumn":206},{"ruleId":"100","severity":1,"message":"106","line":4,"column":26,"nodeType":"102","messageId":"103","endLine":4,"endColumn":32},{"ruleId":"100","severity":1,"message":"107","line":4,"column":33,"nodeType":"102","messageId":"103","endLine":4,"endColumn":38},{"ruleId":"100","severity":1,"message":"108","line":4,"column":39,"nodeType":"102","messageId":"103","endLine":4,"endColumn":45},{"ruleId":"100","severity":1,"message":"126","line":9,"column":10,"nodeType":"102","messageId":"103","endLine":9,"endColumn":17},{"ruleId":"100","severity":1,"message":"127","line":12,"column":10,"nodeType":"102","messageId":"103","endLine":12,"endColumn":18},{"ruleId":"100","severity":1,"message":"128","line":14,"column":10,"nodeType":"102","messageId":"103","endLine":14,"endColumn":21},"no-native-reassign",["129"],"no-negated-in-lhs",["130"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useEffect' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'Redirect' is defined but never used.","'Users' is defined but never used.","'editopen' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["129"],["130"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'add', 'userId', and 'users'. Either include them or remove the dependency array.","ArrayExpression",["131"],"'resetForm' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'loading' is assigned a value but never used.","'hasError' is assigned a value but never used.","'userDetails' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"132","fix":"133"},"Update the dependencies array to be: [add, userId, users]",{"range":"134","text":"135"},[1085,1087],"[add, userId, users]"]
=======
[{"D:\\jabeertask\\MachineTest\\machine-test\\src\\index.js":"1","D:\\jabeertask\\MachineTest\\machine-test\\src\\reportWebVitals.js":"2","D:\\jabeertask\\MachineTest\\machine-test\\src\\App.js":"3","D:\\jabeertask\\MachineTest\\machine-test\\src\\utils\\Users.js":"4","D:\\jabeertask\\MachineTest\\machine-test\\src\\routes\\PrivateRoute.js":"5","D:\\jabeertask\\MachineTest\\machine-test\\src\\Components\\Login\\Login.jsx":"6","D:\\jabeertask\\MachineTest\\machine-test\\src\\Components\\Dashboard\\Dashboard.jsx":"7","D:\\jabeertask\\MachineTest\\machine-test\\src\\Components\\UserManage\\UserManage.jsx":"8","D:\\jabeertask\\MachineTest\\machine-test\\src\\Components\\UsermanageModal\\UserdeleteModal.jsx":"9","D:\\jabeertask\\MachineTest\\machine-test\\src\\Components\\UsermanageModal\\UsermanageModal.jsx":"10","D:\\jabeertask\\MachineTest\\machine-test\\src\\formComponent\\Input.js":"11","D:\\jabeertask\\MachineTest\\machine-test\\src\\formComponent\\validation.js":"12"},{"size":517,"mtime":1606972130782,"results":"13","hashOfConfig":"14"},{"size":375,"mtime":1606972130783,"results":"15","hashOfConfig":"14"},{"size":2035,"mtime":1607084045529,"results":"16","hashOfConfig":"14"},{"size":944,"mtime":1606978129666,"results":"17","hashOfConfig":"14"},{"size":783,"mtime":1607085109786,"results":"18","hashOfConfig":"14"},{"size":1929,"mtime":1607083142383,"results":"19","hashOfConfig":"14"},{"size":1849,"mtime":1607083142381,"results":"20","hashOfConfig":"14"},{"size":3543,"mtime":1607083142385,"results":"21","hashOfConfig":"14"},{"size":930,"mtime":1607083142386,"results":"22","hashOfConfig":"14"},{"size":7235,"mtime":1607170067357,"results":"23","hashOfConfig":"14"},{"size":704,"mtime":1607167453022,"results":"24","hashOfConfig":"14"},{"size":3676,"mtime":1607168489043,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"hqlo47",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":39,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"28"},"D:\\jabeertask\\MachineTest\\machine-test\\src\\index.js",[],["56","57"],"D:\\jabeertask\\MachineTest\\machine-test\\src\\reportWebVitals.js",[],"D:\\jabeertask\\MachineTest\\machine-test\\src\\App.js",[],"D:\\jabeertask\\MachineTest\\machine-test\\src\\utils\\Users.js",[],"D:\\jabeertask\\MachineTest\\machine-test\\src\\routes\\PrivateRoute.js",["58"],"import React,{useState,useEffect} from \"react\";\r\nimport {Route,Redirect,withRouter} from \"react-router-dom\";\r\n\r\n\r\nconst PrivateRoute = ({ component:Component,isAuthenticated,loggedInUser,history,...rest }) => {\r\n\r\n  console.log(\"sdfjksdhfjsf\",loggedInUser)\r\n    useEffect(() => {\r\n    loggedInUser && window.location.pathname === \"/usermanage\" && loggedInUser.role === \"user\" && history.push(\"/dashboard\")\r\n    },[loggedInUser,history])\r\n\r\nreturn(\r\n    <Route \r\n    {...rest} \r\n    render={ (props) => !isAuthenticated && isAuthenticated !== null ? \r\n    (<Redirect to=\"/\" />) \r\n     : \r\n    (\r\n      \r\n      <Component {...props} loggedInUser={loggedInUser} />\r\n    ) \r\n\r\n     }\r\n     />\r\n)\r\n   \r\n\r\n    }\r\n           \r\n               \r\n\r\n\r\nexport default withRouter(PrivateRoute);\r\n","D:\\jabeertask\\MachineTest\\machine-test\\src\\Components\\Login\\Login.jsx",["59","60","61","62"],"import React,{useEffect,useState} from \"react\";\r\nimport './Login.css'\r\nimport {BrowserRouter as Router,Route,Switch} from \"react-router-dom\";\r\n\r\n\r\n\r\nconst Login = ({ users,changeAuth,history }) => {\r\n\r\nconst handleSubmit =(e)=>{\r\n    e.preventDefault()\r\n  \r\n    const validUser = users && users.findIndex(user => user.email === loginData.email && user.password === loginData.password)\r\n    console.log(\"validUserCheck\",validUser)\r\n    if(validUser !== -1) {\r\n      localStorage.setItem(\"loggedInUser\",JSON.stringify(users[validUser]))\r\n      changeAuth()\r\n      history.push(\"/dashboard\")\r\n    }else {\r\n      alert(\"Invalid email or password\")\r\n    }\r\n}   \r\n\r\nconst [loginData,setLoginData] = useState({email:\"\",password:\"\"})\r\n\r\nconst {email,password} = loginData;\r\n\r\nconst handleChange = (e) => {\r\n  setLoginData({...loginData,[e.target.name]:e.target.value})\r\n}\r\n\r\n  return(\r\n    <div className=\"login_content\">\r\n        <header>\r\n      <h1>Machine Test</h1>\r\n          <h1>Login</h1>\r\n        </header>\r\n\r\n        <form  onSubmit={handleSubmit}>\r\n            <div className=\"login_fields\">\r\n                <input \r\n                className=\"input_boxes\"\r\n                type=\"email\" \r\n                name=\"email\" \r\n                value={email}\r\n                placeholder=\"Email\" \r\n                onChange={(e) => handleChange(e)}\r\n                required />\r\n            </div>\r\n\r\n            <div className=\"login_fields\">\r\n                <input \r\n                className=\"input_boxes\"\r\n                type=\"password\" \r\n                name=\"password\"\r\n                value={password}\r\n                placeholder=\"Password\"\r\n                onChange={(e) => handleChange(e)}\r\n                required/>\r\n            </div>\r\n\r\n            <div className=\"login_btn\">\r\n            <button onClick={handleSubmit}>Login</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n  )\r\n  }\r\n\r\n\r\nexport default Login;","D:\\jabeertask\\MachineTest\\machine-test\\src\\Components\\Dashboard\\Dashboard.jsx",["63","64","65","66"],"import React,{useEffect,useState} from \"react\";\r\nimport './Dashboard.css'\r\nimport {BrowserRouter as Router,Route,Switch,Link,Redirect} from \"react-router-dom\";\r\n\r\n\r\nconst Dashboard = ({ loggedInUser,history }) => {\r\n\r\n  console.log(\"sdakjfhsalkjdf\",loggedInUser)\r\n\r\n  const [userDetails,setUserDetails] = useState([])\r\n\r\n  const [currId,setCurrId] = useState(null)\r\n\r\n  useEffect(() => {\r\n    loadUserDetails()\r\n},[])\r\n\r\n\r\nconst loadUserDetails = () => {\r\n  if(localStorage.users) {\r\n    const user = JSON.parse(localStorage.getItem(\"users\"))\r\n    setUserDetails(user)\r\n  }\r\n\r\n  if(localStorage.loggedInUser) {\r\n    const user = JSON.parse(localStorage.getItem(\"loggedInUser\"))\r\n  \r\n    setCurrId(user.userId)\r\n  }\r\n}\r\n\r\n\r\nconst logout = () => {\r\n  localStorage.setItem(\"loggedInUser\",\"\")\r\n  history.push(\"/\")\r\n}\r\n\r\n   \r\n\r\n  return(\r\n    <div>      \r\n       <header>\r\n           <div className=\"dash_title\">\r\n             <div>Welcome To Dashboard</div>\r\n\r\n       {loggedInUser && loggedInUser.role !== \"user\" && <div>\r\n              <Link to=\"/usermanage\" className=\"link_header\">User Management</Link>\r\n           </div>}\r\n\r\n           <div className=\"logout_btn\" >\r\n             <div className=\"logged_user\">{loggedInUser && loggedInUser.name}</div>\r\n              <button onClick={logout}>Log out</button>\r\n           </div>\r\n\r\n           </div>\r\n        </header>\r\n\r\n           <div className=\"dash_content\">\r\n\r\n           <div className=\"userstatus_header\">User List<span>Status</span></div>\r\n            {userDetails && userDetails.length > 0 && userDetails.map((user) => {\r\n              return(\r\n                user.role === \"user\" && user.userId !== currId && <div className=\"user_status\">{user.name}<span>{user.status}</span></div>\r\n              )\r\n            })}\r\n           </div>\r\n    </div>\r\n  )\r\n  }\r\n\r\n\r\nexport default Dashboard;","D:\\jabeertask\\MachineTest\\machine-test\\src\\Components\\UserManage\\UserManage.jsx",["67","68","69","70","71"],"import React,{useEffect,useState} from \"react\";\r\nimport './UserManage.css'\r\nimport {BrowserRouter as Router,Route,Switch,Link} from \"react-router-dom\";\r\nimport { MdModeEdit, MdDelete } from \"react-icons/md\";\r\nimport Users from \"../../utils/Users\";\r\nimport UserManageModal from \"../UsermanageModal/UsermanageModal\";\r\nimport UserdeleteManage from \"../UsermanageModal/UserdeleteModal\";\r\nimport Modal from '@material-ui/core/Modal';\r\n\r\nconst UserManage = () => {\r\n\r\n \r\n  const [insertopen,setinsertopen] = useState(false)\r\n  const [editopen,seteditopen] = useState(false)\r\n\r\n  const [opendelete,setopendelete] = useState(false)\r\n  const [userDetails,setUserDetails] = useState([]);\r\n  const [loggedInUser,setLoggedInUser] = useState(null)\r\n\r\n  const [userId,setUserId] = useState(null)\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const [currId,setCurrId] = useState(null)\r\n  \r\n\r\n  useEffect(() => {\r\n      loadUserDetails()\r\n  },[])\r\n\r\n\r\n  const loadUserDetails = () => {\r\n   \r\n    if(localStorage.users) {\r\n      const user = JSON.parse(localStorage.getItem(\"users\"))\r\n      setUserDetails(user)\r\n    }\r\n\r\n    if(localStorage.loggedInUser) {\r\n      const user = JSON.parse(localStorage.getItem(\"loggedInUser\"))\r\n      setLoggedInUser(user)\r\n      setCurrId(user.userId)\r\n    }\r\n  }\r\n\r\n  const addModal = ()=> {\r\n    setOpen(true);\r\n    setinsertopen(true)\r\n    seteditopen(false)\r\n\r\n  }\r\n\r\n  const editModal = (userId)=> {\r\n    setUserId(userId)\r\n    setOpen(true)\r\n    seteditopen(true)\r\n    setinsertopen(false)\r\n  }\r\n\r\n  const deleteOpen = (userId)=>{\r\n    setUserId(userId)\r\n    setopendelete(true)\r\n  }\r\n\r\n\r\n  const handleClose =()=>{\r\n    setOpen(false);\r\n    setinsertopen(false)\r\n    seteditopen(false)\r\n    setopendelete(false)\r\n}\r\n\r\n\r\n  return(\r\n    <div>\r\n       <header>\r\n         <div className=\"usermanage_title\">\r\n         <div>User Management</div>\r\n         <Link to=\"/dashboard\" className=\"link_header\">DashBoard</Link>\r\n         {loggedInUser && (loggedInUser.role === \"root\" ||  \"admin\") &&<div className=\"useradd_btn\">\r\n           <button onClick={addModal}>Add User</button>\r\n         </div>}\r\n         </div>\r\n        </header>\r\n     \r\n        <div className=\"usermanage_content\">\r\n      \r\n  \r\n            {userDetails && userDetails.length > 0 && userDetails.map((user) => {\r\n              return(\r\n              user.role === \"user\" && user.userId !== currId &&\r\n                <div className=\"users\">\r\n                <div>{user.name}</div>\r\n                <div>\r\n                {(loggedInUser.role === \"root\" ||  \"admin\") && <MdModeEdit  className=\"edit_icon\" onClick={() => editModal(user.userId)}/>}\r\n                  {loggedInUser.role === \"root\" && <MdDelete className=\"delete_icon\" onClick={() => deleteOpen(user.userId)}/>}\r\n                </div>\r\n                </div>\r\n              )\r\n            })}\r\n             \r\n         \r\n        </div>\r\n\r\n        {\r\n        open && \r\n         <Modal \r\n         open={open}\r\n         onClose={handleClose}\r\n         title={insertopen ? \"Add User\" : \"Edit User\"}\r\n         >\r\n           \r\n        <UserManageModal  add={insertopen} onClose={handleClose} users={userDetails} userId={userId} />\r\n\r\n        </Modal>\r\n        }\r\n\r\n      {\r\n        opendelete && \r\n         <Modal \r\n         open={deleteOpen}\r\n         onClose={handleClose}\r\n         >\r\n\r\n        <UserdeleteManage onClose={handleClose} users={userDetails}  userId={userId} loadUserDetails={loadUserDetails} />\r\n\r\n        </Modal>\r\n        }\r\n\r\n    </div>\r\n  )\r\n  }\r\n\r\n\r\nexport default UserManage;","D:\\jabeertask\\MachineTest\\machine-test\\src\\Components\\UsermanageModal\\UserdeleteModal.jsx",[],"D:\\jabeertask\\MachineTest\\machine-test\\src\\Components\\UsermanageModal\\UsermanageModal.jsx",["72","73","74","75","76","77"],"D:\\jabeertask\\MachineTest\\machine-test\\src\\formComponent\\Input.js",[],"D:\\jabeertask\\MachineTest\\machine-test\\src\\formComponent\\validation.js",["78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116"],"import React, { Component } from 'react';\r\n\r\nclass ValidationLibrary extends Component {\r\n  checkValidation(textValue, validatorsArray) {\r\n    console.log(\"mystextvalue\",textValue);\r\n    for (var valid in validatorsArray) {//check validations through array\r\n      if (textValue == \"\") {//check value is empty\r\n        if (validatorsArray[valid].name == 'required') {\r\n          return { msg: \"Field required\", state: false };//validation occurs break the loop & throw the error\r\n        }\r\n      } else if (validatorsArray[valid].name == 'email') {\r\n        var re = /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\r\n        if (re.test(textValue) == false) {\r\n\r\n          return { msg: \"Email is invalid\", state: false };//validation occurs break the loop & throw the error\r\n        }\r\n      } else if (validatorsArray[valid].name == 'minLength') {\r\n        if (textValue.length > parseInt(validatorsArray[valid].params)) {\r\n          return { msg: \"Length should not exceed \" + validatorsArray[valid].params + \" characters\", state: false };//validation occurs break the loop & throw the error\r\n        }\r\n      } else if (validatorsArray[valid].name == 'custommaxLength') {\r\n        if (textValue.length > parseInt(validatorsArray[valid].params)) {\r\n          return { msg: \"Length should not exceed \" + validatorsArray[valid].params + \" characters\", state: false };//validation occurs break the loop & throw the error\r\n        }\r\n      } else if (validatorsArray[valid].name == 'mobile') {\r\n        //var re = /^(0|[1-9][0-9]{9,15})$/;\r\n        var re = /^([0-9][0-9]{9,14})$/;\r\n        if (re.test(textValue) == false) {\r\n          return { msg: \"Please Enter 10 to 15 digit Mobile Number\", state: false };\r\n        }\r\n      }\r\n      else if (validatorsArray[valid].name == 'mobile_india') {\r\n        //var re = /^(0|[1-9][0-9]{9,15})$/;\r\n        var re = /^([0-9][0-9]{9})$/;\r\n        if (re.test(textValue) == false) {\r\n          return { msg: \"Please Enter 10 digit Mobile Number\", state: false };\r\n        }\r\n      }\r\n\r\n      else if (validatorsArray[valid].name == 'leave') {\r\n        var re = /^(0|[1-9][0-9]{0,1})$/;\r\n        // var re = /(^\\d{2}$)|(^\\d{2}-\\d{2}$)/;\r\n        if (re.test(textValue) == false) {\r\n          return { msg: \"2 digits only allowed\", state: false };\r\n        }\r\n      }\r\n      else if (validatorsArray[valid].name == 'mark') {\r\n        //var re = /^(0|[1-9][0-9]{9,15})$/;\r\n        var re = /^([0-9][0-9]{0,2})$/;\r\n        if (re.test(textValue) == false) {\r\n          return { msg: \"Please Enter 3 digits Only\", state: false };\r\n        }\r\n      }\r\n       else if (validatorsArray[valid].name == 'regex') {\r\n        // var re = /^(0|[1-9][0-9]*){10}$/;\r\n        if (new RegExp(validatorsArray[valid].params).test(textValue) == false) {\r\n          return { msg: validatorsArray[valid].msg, state: false };\r\n        }\r\n      }\r\n      else if (validatorsArray[valid].name == 'webUrl') {\r\n        var re = /^((ftp|http|https):\\/\\/)?(www.)?(?!.*(ftp|http|https|www.))[a-zA-Z0-9_-]+(\\.[a-zA-Z]+)+((\\/)[\\w#]+)*(\\/\\w+\\?[a-zA-Z0-9_]+=\\w+(&[a-zA-Z0-9_]+=\\w+)*)?$/;\r\n        if (re.test(textValue) == false) {\r\n          return { msg: \"Url is invalid\", state: false };\r\n        }\r\n      }\r\n      else if (validatorsArray[valid].name == 'address') {\r\n        // var re =/^.{1,500}$/;\r\n        var re = /^[a-zA-Z0-9\\s,'-.]*$/;\r\n        if (re.test(textValue) == false) {\r\n          return { msg: \"Invalid Address\", state: false };\r\n        }\r\n      }\r\n    }\r\n    return { msg: \"\", state: true };//if no error throw empty message\r\n  }\r\n}\r\nexport default new ValidationLibrary();",{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":1,"column":15,"nodeType":"123","messageId":"124","endLine":1,"endColumn":23},{"ruleId":"121","severity":1,"message":"125","line":1,"column":15,"nodeType":"123","messageId":"124","endLine":1,"endColumn":24},{"ruleId":"121","severity":1,"message":"126","line":3,"column":26,"nodeType":"123","messageId":"124","endLine":3,"endColumn":32},{"ruleId":"121","severity":1,"message":"127","line":3,"column":33,"nodeType":"123","messageId":"124","endLine":3,"endColumn":38},{"ruleId":"121","severity":1,"message":"128","line":3,"column":39,"nodeType":"123","messageId":"124","endLine":3,"endColumn":45},{"ruleId":"121","severity":1,"message":"126","line":3,"column":26,"nodeType":"123","messageId":"124","endLine":3,"endColumn":32},{"ruleId":"121","severity":1,"message":"127","line":3,"column":33,"nodeType":"123","messageId":"124","endLine":3,"endColumn":38},{"ruleId":"121","severity":1,"message":"128","line":3,"column":39,"nodeType":"123","messageId":"124","endLine":3,"endColumn":45},{"ruleId":"121","severity":1,"message":"129","line":3,"column":51,"nodeType":"123","messageId":"124","endLine":3,"endColumn":59},{"ruleId":"121","severity":1,"message":"126","line":3,"column":26,"nodeType":"123","messageId":"124","endLine":3,"endColumn":32},{"ruleId":"121","severity":1,"message":"127","line":3,"column":33,"nodeType":"123","messageId":"124","endLine":3,"endColumn":38},{"ruleId":"121","severity":1,"message":"128","line":3,"column":39,"nodeType":"123","messageId":"124","endLine":3,"endColumn":45},{"ruleId":"121","severity":1,"message":"130","line":5,"column":8,"nodeType":"123","messageId":"124","endLine":5,"endColumn":13},{"ruleId":"121","severity":1,"message":"131","line":14,"column":10,"nodeType":"123","messageId":"124","endLine":14,"endColumn":18},{"ruleId":"121","severity":1,"message":"132","line":40,"column":39,"nodeType":"123","messageId":"124","endLine":40,"endColumn":43},{"ruleId":"121","severity":1,"message":"132","line":57,"column":54,"nodeType":"123","messageId":"124","endLine":57,"endColumn":58},{"ruleId":"133","severity":1,"message":"134","line":72,"column":7,"nodeType":"135","endLine":72,"endColumn":9,"suggestions":"136"},{"ruleId":"137","severity":1,"message":"138","line":93,"column":78,"nodeType":"139","messageId":"140","endLine":93,"endColumn":80},{"ruleId":"121","severity":1,"message":"132","line":105,"column":43,"nodeType":"123","messageId":"124","endLine":105,"endColumn":47},{"ruleId":"121","severity":1,"message":"141","line":148,"column":11,"nodeType":"123","messageId":"124","endLine":148,"endColumn":20},{"ruleId":"121","severity":1,"message":"142","line":1,"column":8,"nodeType":"123","messageId":"124","endLine":1,"endColumn":13},{"ruleId":"137","severity":1,"message":"138","line":7,"column":21,"nodeType":"139","messageId":"140","endLine":7,"endColumn":23},{"ruleId":"137","severity":1,"message":"138","line":8,"column":41,"nodeType":"139","messageId":"140","endLine":8,"endColumn":43},{"ruleId":"137","severity":1,"message":"138","line":11,"column":46,"nodeType":"139","messageId":"140","endLine":11,"endColumn":48},{"ruleId":"143","severity":1,"message":"144","line":12,"column":28,"nodeType":"145","messageId":"146","endLine":12,"endColumn":29,"suggestions":"147"},{"ruleId":"143","severity":1,"message":"148","line":12,"column":32,"nodeType":"145","messageId":"146","endLine":12,"endColumn":33,"suggestions":"149"},{"ruleId":"143","severity":1,"message":"150","line":12,"column":40,"nodeType":"145","messageId":"146","endLine":12,"endColumn":41,"suggestions":"151"},{"ruleId":"143","severity":1,"message":"144","line":12,"column":53,"nodeType":"145","messageId":"146","endLine":12,"endColumn":54,"suggestions":"152"},{"ruleId":"143","severity":1,"message":"148","line":12,"column":57,"nodeType":"145","messageId":"146","endLine":12,"endColumn":58,"suggestions":"153"},{"ruleId":"143","severity":1,"message":"150","line":12,"column":65,"nodeType":"145","messageId":"146","endLine":12,"endColumn":66,"suggestions":"154"},{"ruleId":"143","severity":1,"message":"150","line":12,"column":74,"nodeType":"145","messageId":"146","endLine":12,"endColumn":75,"suggestions":"155"},{"ruleId":"143","severity":1,"message":"150","line":12,"column":78,"nodeType":"145","messageId":"146","endLine":12,"endColumn":79,"suggestions":"156"},{"ruleId":"143","severity":1,"message":"148","line":12,"column":94,"nodeType":"145","messageId":"146","endLine":12,"endColumn":95,"suggestions":"157"},{"ruleId":"143","severity":1,"message":"150","line":12,"column":102,"nodeType":"145","messageId":"146","endLine":12,"endColumn":103,"suggestions":"158"},{"ruleId":"143","severity":1,"message":"148","line":12,"column":119,"nodeType":"145","messageId":"146","endLine":12,"endColumn":120,"suggestions":"159"},{"ruleId":"143","severity":1,"message":"150","line":12,"column":127,"nodeType":"145","messageId":"146","endLine":12,"endColumn":128,"suggestions":"160"},{"ruleId":"137","severity":1,"message":"138","line":13,"column":32,"nodeType":"139","messageId":"140","endLine":13,"endColumn":34},{"ruleId":"137","severity":1,"message":"138","line":17,"column":46,"nodeType":"139","messageId":"140","endLine":17,"endColumn":48},{"ruleId":"137","severity":1,"message":"138","line":21,"column":46,"nodeType":"139","messageId":"140","endLine":21,"endColumn":48},{"ruleId":"137","severity":1,"message":"138","line":25,"column":46,"nodeType":"139","messageId":"140","endLine":25,"endColumn":48},{"ruleId":"161","severity":1,"message":"162","line":27,"column":13,"nodeType":"123","messageId":"163","endLine":27,"endColumn":15},{"ruleId":"137","severity":1,"message":"138","line":28,"column":32,"nodeType":"139","messageId":"140","endLine":28,"endColumn":34},{"ruleId":"137","severity":1,"message":"138","line":32,"column":44,"nodeType":"139","messageId":"140","endLine":32,"endColumn":46},{"ruleId":"161","severity":1,"message":"162","line":34,"column":13,"nodeType":"123","messageId":"163","endLine":34,"endColumn":15},{"ruleId":"137","severity":1,"message":"138","line":35,"column":32,"nodeType":"139","messageId":"140","endLine":35,"endColumn":34},{"ruleId":"137","severity":1,"message":"138","line":40,"column":44,"nodeType":"139","messageId":"140","endLine":40,"endColumn":46},{"ruleId":"161","severity":1,"message":"162","line":41,"column":13,"nodeType":"123","messageId":"163","endLine":41,"endColumn":15},{"ruleId":"137","severity":1,"message":"138","line":43,"column":32,"nodeType":"139","messageId":"140","endLine":43,"endColumn":34},{"ruleId":"137","severity":1,"message":"138","line":47,"column":44,"nodeType":"139","messageId":"140","endLine":47,"endColumn":46},{"ruleId":"161","severity":1,"message":"162","line":49,"column":13,"nodeType":"123","messageId":"163","endLine":49,"endColumn":15},{"ruleId":"137","severity":1,"message":"138","line":50,"column":32,"nodeType":"139","messageId":"140","endLine":50,"endColumn":34},{"ruleId":"137","severity":1,"message":"138","line":54,"column":45,"nodeType":"139","messageId":"140","endLine":54,"endColumn":47},{"ruleId":"137","severity":1,"message":"138","line":56,"column":71,"nodeType":"139","messageId":"140","endLine":56,"endColumn":73},{"ruleId":"137","severity":1,"message":"138","line":60,"column":44,"nodeType":"139","messageId":"140","endLine":60,"endColumn":46},{"ruleId":"161","severity":1,"message":"162","line":61,"column":13,"nodeType":"123","messageId":"163","endLine":61,"endColumn":15},{"ruleId":"137","severity":1,"message":"138","line":62,"column":32,"nodeType":"139","messageId":"140","endLine":62,"endColumn":34},{"ruleId":"137","severity":1,"message":"138","line":66,"column":44,"nodeType":"139","messageId":"140","endLine":66,"endColumn":46},{"ruleId":"161","severity":1,"message":"162","line":68,"column":13,"nodeType":"123","messageId":"163","endLine":68,"endColumn":15},{"ruleId":"137","severity":1,"message":"138","line":69,"column":32,"nodeType":"139","messageId":"140","endLine":69,"endColumn":34},"no-native-reassign",["164"],"no-negated-in-lhs",["165"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'Redirect' is defined but never used.","'Users' is defined but never used.","'editopen' is assigned a value but never used.","'role' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'add', 'userId', and 'users'. Either include them or remove the dependency array.","ArrayExpression",["166"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'resetForm' is assigned a value but never used.","'React' is defined but never used.","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["167","168"],"Unnecessary escape character: \\..",["169","170"],"Unnecessary escape character: \\\".",["171","172"],["173","174"],["175","176"],["177","178"],["179","180"],["181","182"],["183","184"],["185","186"],["187","188"],["189","190"],"no-redeclare","'re' is already defined.","redeclared","no-global-assign","no-unsafe-negation",{"desc":"191","fix":"192"},{"messageId":"193","fix":"194","desc":"195"},{"messageId":"196","fix":"197","desc":"198"},{"messageId":"193","fix":"199","desc":"195"},{"messageId":"196","fix":"200","desc":"198"},{"messageId":"193","fix":"201","desc":"195"},{"messageId":"196","fix":"202","desc":"198"},{"messageId":"193","fix":"203","desc":"195"},{"messageId":"196","fix":"204","desc":"198"},{"messageId":"193","fix":"205","desc":"195"},{"messageId":"196","fix":"206","desc":"198"},{"messageId":"193","fix":"207","desc":"195"},{"messageId":"196","fix":"208","desc":"198"},{"messageId":"193","fix":"209","desc":"195"},{"messageId":"196","fix":"210","desc":"198"},{"messageId":"193","fix":"211","desc":"195"},{"messageId":"196","fix":"212","desc":"198"},{"messageId":"193","fix":"213","desc":"195"},{"messageId":"196","fix":"214","desc":"198"},{"messageId":"193","fix":"215","desc":"195"},{"messageId":"196","fix":"216","desc":"198"},{"messageId":"193","fix":"217","desc":"195"},{"messageId":"196","fix":"218","desc":"198"},{"messageId":"193","fix":"219","desc":"195"},{"messageId":"196","fix":"220","desc":"198"},"Update the dependencies array to be: [add, userId, users]",{"range":"221","text":"222"},"removeEscape",{"range":"223","text":"224"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"225","text":"226"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"227","text":"224"},{"range":"228","text":"226"},{"range":"229","text":"224"},{"range":"230","text":"226"},{"range":"231","text":"224"},{"range":"232","text":"226"},{"range":"233","text":"224"},{"range":"234","text":"226"},{"range":"235","text":"224"},{"range":"236","text":"226"},{"range":"237","text":"224"},{"range":"238","text":"226"},{"range":"239","text":"224"},{"range":"240","text":"226"},{"range":"241","text":"224"},{"range":"242","text":"226"},{"range":"243","text":"224"},{"range":"244","text":"226"},{"range":"245","text":"224"},{"range":"246","text":"226"},{"range":"247","text":"224"},{"range":"248","text":"226"},[2030,2032],"[add, userId, users]",[577,578],"",[577,577],"\\",[581,582],[581,581],[589,590],[589,589],[602,603],[602,602],[606,607],[606,606],[614,615],[614,614],[623,624],[623,623],[627,628],[627,627],[643,644],[643,643],[651,652],[651,651],[668,669],[668,668],[676,677],[676,676]]
>>>>>>> d26788d8faefa9317e9f7d1dd46c5cbdab494247
